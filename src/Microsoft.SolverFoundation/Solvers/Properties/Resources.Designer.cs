//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.SolverFoundation.Solvers.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.SolverFoundation.Solvers.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aborted ähnelt.
        /// </summary>
        internal static string Aborted {
            get {
                return ResourceManager.GetString("Aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A bound constraint is neither a upper-bound constraint nor a lower-bound constraint ähnelt.
        /// </summary>
        internal static string ABoundConstraintIsNeitherAUpperBoundConstraintNorALowerBoundConstraint {
            get {
                return ResourceManager.GetString("ABoundConstraintIsNeitherAUpperBoundConstraintNorALowerBoundConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accepted contracted: {0}. ähnelt.
        /// </summary>
        internal static string AcceptedContractedCount0 {
            get {
                return ResourceManager.GetString("AcceptedContractedCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accepted expanded: {0}. ähnelt.
        /// </summary>
        internal static string AcceptedExpandedCount0 {
            get {
                return ResourceManager.GetString("AcceptedExpandedCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accepted reflected: {0}. ähnelt.
        /// </summary>
        internal static string AcceptedReflectedCount0 {
            get {
                return ResourceManager.GetString("AcceptedReflectedCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Actual size of matrix is too big (more than {1}) ähnelt.
        /// </summary>
        internal static string ActualSizeOfMatrixTooBig0 {
            get {
                return ResourceManager.GetString("ActualSizeOfMatrixTooBig0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AddChange {0} {1} ähnelt.
        /// </summary>
        internal static string AddChange01 {
            get {
                return ResourceManager.GetString("AddChange01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trying to add constant False as a constraint. The model is infeasible ähnelt.
        /// </summary>
        internal static string AddingFalseAsConstraint {
            get {
                return ResourceManager.GetString("AddingFalseAsConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After-fill non-zeros {0} ähnelt.
        /// </summary>
        internal static string AfterFillNonZeros0 {
            get {
                return ResourceManager.GetString("AfterFillNonZeros0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All bindable parameters should have a binding clause in the Data Binding section. ähnelt.
        /// </summary>
        internal static string AllBindableParametersShouldHaveBindClause {
            get {
                return ResourceManager.GetString("AllBindableParametersShouldHaveBindClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All variables should be active for the row. ähnelt.
        /// </summary>
        internal static string AllVariablesShouldBeActiveForTheRow {
            get {
                return ResourceManager.GetString("AllVariablesShouldBeActiveForTheRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solve is in progress  ähnelt.
        /// </summary>
        internal static string AlreadySolving {
            get {
                return ResourceManager.GetString("AlreadySolving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument {0} to index operation is of an invalid type ähnelt.
        /// </summary>
        internal static string Argument0ToIndexOperationIsOfAnInvalidType {
            get {
                return ResourceManager.GetString("Argument0ToIndexOperationIsOfAnInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument is not a tuple ähnelt.
        /// </summary>
        internal static string ArgumentIsNotATuple {
            get {
                return ResourceManager.GetString("ArgumentIsNotATuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one argument expected ähnelt.
        /// </summary>
        internal static string AtLeast1ArgumentExpected {
            get {
                return ResourceManager.GetString("AtLeast1ArgumentExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AtMostMofN expects Boolean Terms ähnelt.
        /// </summary>
        internal static string AtMostMofNExpectsBooleanTerms {
            get {
                return ResourceManager.GetString("AtMostMofNExpectsBooleanTerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attributes for symbol &apos;{0}&apos; are locked. ähnelt.
        /// </summary>
        internal static string AttributesForSymbolAreLocked {
            get {
                return ResourceManager.GetString("AttributesForSymbolAreLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   average depth / estimated tree size : {0} {1} ähnelt.
        /// </summary>
        internal static string AverageDepthEstimatedTreeSize01 {
            get {
                return ResourceManager.GetString("AverageDepthEstimatedTreeSize01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad annotation ähnelt.
        /// </summary>
        internal static string BadAnnotation {
            get {
                return ResourceManager.GetString("BadAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad constraint ähnelt.
        /// </summary>
        internal static string BadConstraint {
            get {
                return ResourceManager.GetString("BadConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad iterator ähnelt.
        /// </summary>
        internal static string BadIterator {
            get {
                return ResourceManager.GetString("BadIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad iterator {0} ähnelt.
        /// </summary>
        internal static string BadIterator0 {
            get {
                return ResourceManager.GetString("BadIterator0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad Kind ähnelt.
        /// </summary>
        internal static string BadKind {
            get {
                return ResourceManager.GetString("BadKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad mark ähnelt.
        /// </summary>
        internal static string BadMark {
            get {
                return ResourceManager.GetString("BadMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name &apos;{0}&apos; contains invalid characters. Names must begin with a letter or underscore, and contain only letters, numbers, and underscores. ähnelt.
        /// </summary>
        internal static string BadOMLName {
            get {
                return ResourceManager.GetString("BadOMLName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad rule ähnelt.
        /// </summary>
        internal static string BadRule {
            get {
                return ResourceManager.GetString("BadRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad TextVersion in new-line token ähnelt.
        /// </summary>
        internal static string BadTextVersionInNewLineToken {
            get {
                return ResourceManager.GetString("BadTextVersionInNewLineToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bad ValueKind ähnelt.
        /// </summary>
        internal static string BadValueKind {
            get {
                return ResourceManager.GetString("BadValueKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bind data clauses should have parameter name and input string ähnelt.
        /// </summary>
        internal static string BinddataClausesShouldHaveParameterAndInput {
            get {
                return ResourceManager.GetString("BinddataClausesShouldHaveParameterAndInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot bind data to {0} from {1}. {1} either represents multiple cells or an empty cell. ähnelt.
        /// </summary>
        internal static string BindDataInErrorEmptyCellFormat {
            get {
                return ResourceManager.GetString("BindDataInErrorEmptyCellFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot bind data to {0}, please specify cell ranges. ähnelt.
        /// </summary>
        internal static string BindDataInErrorMissingCellFormat {
            get {
                return ResourceManager.GetString("BindDataInErrorMissingCellFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boolean functions cannot be used as goals. Consider changing to Integer. ähnelt.
        /// </summary>
        internal static string BooleanGoal {
            get {
                return ResourceManager.GetString("BooleanGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bounded vid was neither a row nor a variable. ähnelt.
        /// </summary>
        internal static string BoundedVidWasNeitherRowNorVar {
            get {
                return ResourceManager.GetString("BoundedVidWasNeitherRowNorVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bounds for discrete uniform distribution need to be integers ähnelt.
        /// </summary>
        internal static string BoundsForDiscreteUniformDistriutionNeedsToBeIntegers {
            get {
                return ResourceManager.GetString("BoundsForDiscreteUniformDistriutionNeedsToBeIntegers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum or maximum boundaries are not numeric ähnelt.
        /// </summary>
        internal static string BundariesAreNotNumeric {
            get {
                return ResourceManager.GetString("BundariesAreNotNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} called on non-type ähnelt.
        /// </summary>
        internal static string CalledOnNonType {
            get {
                return ResourceManager.GetString("CalledOnNonType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} called on &lt;null&gt; ähnelt.
        /// </summary>
        internal static string CalledOnNull {
            get {
                return ResourceManager.GetString("CalledOnNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add cut: {0} to the model ähnelt.
        /// </summary>
        internal static string CannotAddCutXToModel0 {
            get {
                return ResourceManager.GetString("CannotAddCutXToModel0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot bind read-only data table for output ähnelt.
        /// </summary>
        internal static string CannotBindReadOnlyDataTableForOutput {
            get {
                return ResourceManager.GetString("CannotBindReadOnlyDataTableForOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Given Term cannot be cloned ähnelt.
        /// </summary>
        internal static string CannotCloneTerm {
            get {
                return ResourceManager.GetString("CannotCloneTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create decision binding on decision &apos;{0}&apos; because it is not added to any model ähnelt.
        /// </summary>
        internal static string CannotCreateDecisionBindingOnDecisionNotAddedToAModel {
            get {
                return ResourceManager.GetString("CannotCreateDecisionBindingOnDecisionNotAddedToAModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create decision binding on decision &apos;{0}&apos; because it is not added to the root model ähnelt.
        /// </summary>
        internal static string CannotCreateDecisionBindingOnDecisionNotAddedToRootModel {
            get {
                return ResourceManager.GetString("CannotCreateDecisionBindingOnDecisionNotAddedToRootModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot enumerate an infinite number of scenarios ähnelt.
        /// </summary>
        internal static string CannotEnumerateAnInfiniteNumberOfScenarios {
            get {
                return ResourceManager.GetString("CannotEnumerateAnInfiniteNumberOfScenarios", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot enumerate scenarios for binomial value. Probability of a scenario with {0} successful trials is insufficiently large. ähnelt.
        /// </summary>
        internal static string CannotEnumerateScenariosForBinomialValueProbabilityOfAScenarioWithSuccessfulTrialsIsInsufficientlyLarge {
            get {
                return ResourceManager.GetString("CannotEnumerateScenariosForBinomialValueProbabilityOfAScenarioWithSuccessfulTrial" +
                        "sIsInsufficientlyLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find domain ähnelt.
        /// </summary>
        internal static string CanNotFindDomain {
            get {
                return ResourceManager.GetString("CanNotFindDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find indexes for decision {0}. ähnelt.
        /// </summary>
        internal static string CannotFindIndexesForDecision0 {
            get {
                return ResourceManager.GetString("CannotFindIndexesForDecision0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find the constraint in the model. ähnelt.
        /// </summary>
        internal static string CannotFindTheConstraintInTheModel {
            get {
                return ResourceManager.GetString("CannotFindTheConstraintInTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find the decision in the model: {0}.  Make sure that the decision has been added to the model and that it is used in at least one goal or constraint. ähnelt.
        /// </summary>
        internal static string CannotFindTheDecisionAndIndexesInTheModel0 {
            get {
                return ResourceManager.GetString("CannotFindTheDecisionAndIndexesInTheModel0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find virtual path extension from WCF host. ähnelt.
        /// </summary>
        internal static string CannotFindVirtualPathExtensionFromWCFHost {
            get {
                return ResourceManager.GetString("CannotFindVirtualPathExtensionFromWCFHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot import constant parameters. ähnelt.
        /// </summary>
        internal static string CannotImportConstantParameter {
            get {
                return ResourceManager.GetString("CannotImportConstantParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot import Foreach decisions. ähnelt.
        /// </summary>
        internal static string CannotImportForeachDecision {
            get {
                return ResourceManager.GetString("CannotImportForeachDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot import non-constant iterators. ähnelt.
        /// </summary>
        internal static string CannotImportNonConstantIterator {
            get {
                return ResourceManager.GetString("CannotImportNonConstantIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot import non-Set iterators. ähnelt.
        /// </summary>
        internal static string CannotImportNonSetIterator {
            get {
                return ResourceManager.GetString("CannotImportNonSetIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot index non-Decisions. ähnelt.
        /// </summary>
        internal static string CannotIndexNonDecision {
            get {
                return ResourceManager.GetString("CannotIndexNonDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot remove {0} because it is being used. ähnelt.
        /// </summary>
        internal static string CannotRemove0BecauseItIsUsed {
            get {
                return ResourceManager.GetString("CannotRemove0BecauseItIsUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot represent {0} as an integer ähnelt.
        /// </summary>
        internal static string CannotRepresentAsAnInteger {
            get {
                return ResourceManager.GetString("CannotRepresentAsAnInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot reuse decision {0} in a different model ähnelt.
        /// </summary>
        internal static string CannotReuseDecision0InADifferentModel {
            get {
                return ResourceManager.GetString("CannotReuseDecision0InADifferentModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot reuse parameter {0} in a different model. ähnelt.
        /// </summary>
        internal static string CannotReuseParameter0InADifferentModel {
            get {
                return ResourceManager.GetString("CannotReuseParameter0InADifferentModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot reuse set {0} in a different model. ähnelt.
        /// </summary>
        internal static string CannotReuseSet0InADifferentModel {
            get {
                return ResourceManager.GetString("CannotReuseSet0InADifferentModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot set bounds on a quadratic goal. ähnelt.
        /// </summary>
        internal static string CannotSetBoundsOnAQuadraticGoal {
            get {
                return ResourceManager.GetString("CannotSetBoundsOnAQuadraticGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use IntegerSolver to solve a non-integer model. ähnelt.
        /// </summary>
        internal static string CannotSolve {
            get {
                return ResourceManager.GetString("CannotSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot solve because there is no active model. ähnelt.
        /// </summary>
        internal static string CannotSolveBecauseThereIsNoActiveModel {
            get {
                return ResourceManager.GetString("CannotSolveBecauseThereIsNoActiveModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot specify Domain.Any for a parameter. ähnelt.
        /// </summary>
        internal static string CanNotSpecifyDomainAnyToParameter {
            get {
                return ResourceManager.GetString("CanNotSpecifyDomainAnyToParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use &apos;Identical&apos; (&apos;===&apos;) or Set (&apos;=&apos;) in constraints - try using &apos;Equal&apos; (&apos;==&apos;). ähnelt.
        /// </summary>
        internal static string CannotUseIdenticalOrSet {
            get {
                return ResourceManager.GetString("CannotUseIdenticalOrSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use this term. Only Decisions, Parameters and Constraints can be used ähnelt.
        /// </summary>
        internal static string CannotUseThisTerm {
            get {
                return ResourceManager.GetString("CannotUseThisTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use the term (&apos;{0}&apos;). Only Decisions, Parameters and Constraints can be used ähnelt.
        /// </summary>
        internal static string CannotUseThisTerm0 {
            get {
                return ResourceManager.GetString("CannotUseThisTerm0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot change coefficients for row variables ähnelt.
        /// </summary>
        internal static string CanTChangeCoefficientsForRowVariables {
            get {
                return ResourceManager.GetString("CanTChangeCoefficientsForRowVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot mix expressions from different RewriteSystems ähnelt.
        /// </summary>
        internal static string CanTMixExpressionFromDifferentRewriteSystems {
            get {
                return ResourceManager.GetString("CanTMixExpressionFromDifferentRewriteSystems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid term to clone ähnelt.
        /// </summary>
        internal static string CloneInvalidTerm {
            get {
                return ResourceManager.GetString("CloneInvalidTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create IntegerSolver instance because the model uses an unsupported Domain ähnelt.
        /// </summary>
        internal static string CloneUnsupportedDomain {
            get {
                return ResourceManager.GetString("CloneUnsupportedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ClrObjectWrapper exception: {0} ähnelt.
        /// </summary>
        internal static string ClrObjectWrapperException0 {
            get {
                return ResourceManager.GetString("ClrObjectWrapperException0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Coefficient for variable in a SOS row cannot be zero ähnelt.
        /// </summary>
        internal static string CoefficientForVariableInASOSRowCannotBeZero {
            get {
                return ResourceManager.GetString("CoefficientForVariableInASOSRowCannotBeZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ColumnCompressedSparseMatrix does not support element insertion ähnelt.
        /// </summary>
        internal static string ColumnCompressedSparseMatrixDoesNotSupportElementInsertion {
            get {
                return ResourceManager.GetString("ColumnCompressedSparseMatrixDoesNotSupportElementInsertion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die column indexes did not sort correctly ähnelt.
        /// </summary>
        internal static string ColumnIndexesDidNotSortCorrectly {
            get {
                return ResourceManager.GetString("ColumnIndexesDidNotSortCorrectly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comparisons should have two or more arguments ähnelt.
        /// </summary>
        internal static string ComparisonsShouldHave2Arguments {
            get {
                return ResourceManager.GetString("ComparisonsShouldHave2Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Complete ähnelt.
        /// </summary>
        internal static string Complete {
            get {
                return ResourceManager.GetString("Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CspComposite does not support this constraint  ähnelt.
        /// </summary>
        internal static string CompositeConstraintNotSupported {
            get {
                return ResourceManager.GetString("CompositeConstraintNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The composite domains of the input of this function are not compatible  ähnelt.
        /// </summary>
        internal static string CompositeDomainIncompatible {
            get {
                return ResourceManager.GetString("CompositeDomainIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The function does not support composite variables as input. ähnelt.
        /// </summary>
        internal static string CompositeDomainNotSupported {
            get {
                return ResourceManager.GetString("CompositeDomainNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Field has been added to this composite  ähnelt.
        /// </summary>
        internal static string CompositeDuplicateFields {
            get {
                return ResourceManager.GetString("CompositeDuplicateFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arity of a field in the composite cannot be less than or equal to 0  ähnelt.
        /// </summary>
        internal static string CompositeFieldArityZero {
            get {
                return ResourceManager.GetString("CompositeFieldArityZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Composite cannot be changed since variables of this composite have been created  ähnelt.
        /// </summary>
        internal static string CompositeFroze {
            get {
                return ResourceManager.GetString("CompositeFroze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The index to the field of the composite is out of range  ähnelt.
        /// </summary>
        internal static string CompositeIndexOutOfRange {
            get {
                return ResourceManager.GetString("CompositeIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specified field does not exist in this composite  ähnelt.
        /// </summary>
        internal static string CompositeInvalidFieldReference {
            get {
                return ResourceManager.GetString("CompositeInvalidFieldReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terms created in a CspComposite must use other terms created in the same CspComposite as inputs ähnelt.
        /// </summary>
        internal static string CompositeUnknownInputs {
            get {
                return ResourceManager.GetString("CompositeUnknownInputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use GetValue to retrieve value of a composite variable. Need to retrieve the values from its fields manually  ähnelt.
        /// </summary>
        internal static string CompositeVarGetValueNotSupported {
            get {
                return ResourceManager.GetString("CompositeVarGetValueNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///Computational progress of HSD solver:
        /// ähnelt.
        /// </summary>
        internal static string ComputationalProgressOfHSDSolver {
            get {
                return ResourceManager.GetString("ComputationalProgressOfHSDSolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of Bool vars:              {0,-10}  ähnelt.
        /// </summary>
        internal static string ComputeStatisticsBoolVars010 {
            get {
                return ResourceManager.GetString("ComputeStatisticsBoolVars010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of constraints:            {0,-10}
        /// ähnelt.
        /// </summary>
        internal static string ComputeStatisticsConstraints010 {
            get {
                return ResourceManager.GetString("ComputeStatisticsConstraints010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delay since start:       {0}ms
        /// ähnelt.
        /// </summary>
        internal static string ComputeStatisticsDelaySinceStart0Ms {
            get {
                return ResourceManager.GetString("ComputeStatisticsDelaySinceStart0Ms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of Int vars:               {0,-10}  ähnelt.
        /// </summary>
        internal static string ComputeStatisticsIntVars010 {
            get {
                return ResourceManager.GetString("ComputeStatisticsIntVars010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (user defined: {0,8})
        /// ähnelt.
        /// </summary>
        internal static string ComputeStatisticsUserdefined08 {
            get {
                return ResourceManager.GetString("ComputeStatisticsUserdefined08", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Condition of ForEach is not constant ähnelt.
        /// </summary>
        internal static string ConditionOfForEachIsNotConstant {
            get {
                return ResourceManager.GetString("ConditionOfForEachIsNotConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cone type {0} is not supported. ähnelt.
        /// </summary>
        internal static string ConeType0NotSupported {
            get {
                return ResourceManager.GetString("ConeType0NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Constant value is not an integer or a Boolean ähnelt.
        /// </summary>
        internal static string ConstantValueIsNotAnInteger {
            get {
                return ResourceManager.GetString("ConstantValueIsNotAnInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Constant values may not be redefined. ähnelt.
        /// </summary>
        internal static string ConstantValuesMayNotBeRedefined {
            get {
                return ResourceManager.GetString("ConstantValuesMayNotBeRedefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Constraint label already exists. ähnelt.
        /// </summary>
        internal static string ConstraintLabelAlreadyExists {
            get {
                return ResourceManager.GetString("ConstraintLabelAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not find stochastic core file or directory {0}. ähnelt.
        /// </summary>
        internal static string CouldNotFindStochasticCoreFileOrDirectory0 {
            get {
                return ResourceManager.GetString("CouldNotFindStochasticCoreFileOrDirectory0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not get double value ähnelt.
        /// </summary>
        internal static string CouldNotGetDoubleValue {
            get {
                return ResourceManager.GetString("CouldNotGetDoubleValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to parse MPS model. ähnelt.
        /// </summary>
        internal static string CouldNotParseMPSModel {
            get {
                return ResourceManager.GetString("CouldNotParseMPSModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to parse OML model. Expression: {0}. ähnelt.
        /// </summary>
        internal static string CouldNotParseOMLModel0 {
            get {
                return ResourceManager.GetString("CouldNotParseOMLModel0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to parse SMPS model. ähnelt.
        /// </summary>
        internal static string CouldNotParseSMPSModel {
            get {
                return ResourceManager.GetString("CouldNotParseSMPSModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot print sensitivity value ähnelt.
        /// </summary>
        internal static string CouldNotPrintSensitivityValue {
            get {
                return ResourceManager.GetString("CouldNotPrintSensitivityValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OML could not find a solver for the model ähnelt.
        /// </summary>
        internal static string CouldntFindASolverForTheModel {
            get {
                return ResourceManager.GetString("CouldntFindASolverForTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ---------------------------------------------------------------------------- ähnelt.
        /// </summary>
        internal static string CqnDashes {
            get {
                return ResourceManager.GetString("CqnDashes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CompactQuasiNewtonSolver requires both FunctionEvaluator and GradientEvaluator to be specified before calling solve. ähnelt.
        /// </summary>
        internal static string CqnSolverRequiresBothEvaluatorsToBeSpecifiedBeforeCallingSolve {
            get {
                return ResourceManager.GetString("CqnSolverRequiresBothEvaluatorsToBeSpecifiedBeforeCallingSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0,0:000}               {1,0:0.0000e+00}   {2,0:0000}                    {3} ähnelt.
        /// </summary>
        internal static string CqnTraceIteration0123 {
            get {
                return ResourceManager.GetString("CqnTraceIteration0123", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Iteration count   New value    Evaluation call count   Termination criterion ähnelt.
        /// </summary>
        internal static string CqnTraceIterationHeader {
            get {
                return ResourceManager.GetString("CqnTraceIterationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting          {0,0:0.0000e+00}   {1,0:0000}                    {2} ähnelt.
        /// </summary>
        internal static string CqnTraceStarting012 {
            get {
                return ResourceManager.GetString("CqnTraceStarting012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CSP solver cannot process the model: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string CSPSolverCantProcessTheModel01 {
            get {
                return ResourceManager.GetString("CSPSolverCantProcessTheModel01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CSP solver does not support non-integer values ähnelt.
        /// </summary>
        internal static string CSPSolverDoesNotSupportNonIntegerValues {
            get {
                return ResourceManager.GetString("CSPSolverDoesNotSupportNonIntegerValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indexed Tuples can only be used for random Parameters. ähnelt.
        /// </summary>
        internal static string CurrentlyOnlyTuplesWhichIsUsedAsARandomParameterSupportsIndexing {
            get {
                return ResourceManager.GetString("CurrentlyOnlyTuplesWhichIsUsedAsARandomParameterSupportsIndexing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot perform cut generation in a multi-threaded environment  ähnelt.
        /// </summary>
        internal static string CutGenException {
            get {
                return ResourceManager.GetString("CutGenException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lower: {0}, Upper: {1}, Entry count: {2} ähnelt.
        /// </summary>
        internal static string CutLowerUpperEntryCount012 {
            get {
                return ResourceManager.GetString("CutLowerUpperEntryCount012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cycle! {0} {1} ähnelt.
        /// </summary>
        internal static string Cycle01 {
            get {
                return ResourceManager.GetString("Cycle01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data binding failed for parameter {0} because {2} is not a valid index for set {1}. ähnelt.
        /// </summary>
        internal static string DataBindingFailedForParameter012 {
            get {
                return ResourceManager.GetString("DataBindingFailedForParameter012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decimal value out of range  ähnelt.
        /// </summary>
        internal static string DecimalValueOutOfRange {
            get {
                return ResourceManager.GetString("DecimalValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decisions cannot be disabled ähnelt.
        /// </summary>
        internal static string DecisionsCannotBeDisabled {
            get {
                return ResourceManager.GetString("DecisionsCannotBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decomposition ähnelt.
        /// </summary>
        internal static string Decomposition {
            get {
                return ResourceManager.GetString("Decomposition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decomposition cannot be applied because the master model is unbounded ähnelt.
        /// </summary>
        internal static string DecompositionCannotBeApplied {
            get {
                return ResourceManager.GetString("DecompositionCannotBeApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decomposition cannot be applied as there is a decision which participates only in second stage constraints, and has an infinite bound. ähnelt.
        /// </summary>
        internal static string DecompositionCannotBeAppliedInfiniteBound {
            get {
                return ResourceManager.GetString("DecompositionCannotBeAppliedInfiniteBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decomposition Gap: {0} ähnelt.
        /// </summary>
        internal static string DecompositionGap0 {
            get {
                return ResourceManager.GetString("DecompositionGap0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decomposition Iterations: {0} ähnelt.
        /// </summary>
        internal static string DecompositionIterations {
            get {
                return ResourceManager.GetString("DecompositionIterations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die defaultValue should be a definite number ähnelt.
        /// </summary>
        internal static string DefaultValueShouldBeDefiniteNumber {
            get {
                return ResourceManager.GetString("DefaultValueShouldBeDefiniteNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A gradient calculation function must be specified before calling Solve. ähnelt.
        /// </summary>
        internal static string DelegateOfFunctionIsNeeded {
            get {
                return ResourceManager.GetString("DelegateOfFunctionIsNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deterministic Equivalent ähnelt.
        /// </summary>
        internal static string DeterministicEquivalent {
            get {
                return ResourceManager.GetString("DeterministicEquivalent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dimensions =  ähnelt.
        /// </summary>
        internal static string Dimensions {
            get {
                return ResourceManager.GetString("Dimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dimensions = {0} ähnelt.
        /// </summary>
        internal static string Dimensions0 {
            get {
                return ResourceManager.GetString("Dimensions0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Given directive {0} cannot locate a solver that has the capability to solve the model ähnelt.
        /// </summary>
        internal static string DirectiveCannotLocateSolver {
            get {
                return ResourceManager.GetString("DirectiveCannotLocateSolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one directive is required ähnelt.
        /// </summary>
        internal static string DirectiveRequired {
            get {
                return ResourceManager.GetString("DirectiveRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected Term kind ähnelt.
        /// </summary>
        internal static string DisolverBooleanTermExpected {
            get {
                return ResourceManager.GetString("DisolverBooleanTermExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IntegerSolver can&apos;t process the model: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string DisolverCantProcessTheModel {
            get {
                return ResourceManager.GetString("DisolverCantProcessTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected Term kind ähnelt.
        /// </summary>
        internal static string DisolverIntegerTermExpected {
            get {
                return ResourceManager.GetString("DisolverIntegerTermExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected Term kind ähnelt.
        /// </summary>
        internal static string DisolverTermExpected {
            get {
                return ResourceManager.GetString("DisolverTermExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AdditionRatio ähnelt.
        /// </summary>
        internal static string DisplayFeaturesAdditionRatio {
            get {
                return ResourceManager.GetString("DisplayFeaturesAdditionRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -&gt; Densest variable connected to {0}% of constraints. ähnelt.
        /// </summary>
        internal static string DisplayFeaturesDensestVariableConnectedTo0OfConstraints {
            get {
                return ResourceManager.GetString("DisplayFeaturesDensestVariableConnectedTo0OfConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histogram over domain size and all vars: ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistogramOverDomainSizeAndAllVars {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistogramOverDomainSizeAndAllVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histogram over domain size and user-defined vars: ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistogramOverDomainSizeAndUserDefinedVars {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistogramOverDomainSizeAndUserDefinedVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histogram over number of constraints and all vars: ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistogramOverNumberOfConstraintsAndAllVars {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistogramOverNumberOfConstraintsAndAllVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histogram over number of constraints and bool vars: ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistogramOverNumberOfConstraintsAndBoolVars {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistogramOverNumberOfConstraintsAndBoolVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histogram over number of constraints and integer vars: ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistogramOverNumberOfConstraintsAndIntegerVars {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistogramOverNumberOfConstraintsAndIntegerVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histogram over number of constraints and user-defined vars: ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistogramOverNumberOfConstraintsAndUserDefinedVars {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistogramOverNumberOfConstraintsAndUserDefinedVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Histograms ähnelt.
        /// </summary>
        internal static string DisplayFeaturesHistograms {
            get {
                return ResourceManager.GetString("DisplayFeaturesHistograms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurrence of Constraints (Ratio [= Count/AllConstraints]) ähnelt.
        /// </summary>
        internal static string DisplayFeaturesOccurenceOfConstraintsRatioCountAllConstraints {
            get {
                return ResourceManager.GetString("DisplayFeaturesOccurenceOfConstraintsRatioCountAllConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Small ----------- Large ähnelt.
        /// </summary>
        internal static string DisplayFeaturesSmallLarge {
            get {
                return ResourceManager.GetString("DisplayFeaturesSmallLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total number of features: {0} ähnelt.
        /// </summary>
        internal static string DisplayFeaturesTotalNumberOfFeatures0 {
            get {
                return ResourceManager.GetString("DisplayFeaturesTotalNumberOfFeatures0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ähnelt.
        /// </summary>
        internal static string DisplayFeaturesXXXX {
            get {
                return ResourceManager.GetString("DisplayFeaturesXXXX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} with its current parameters cannot be sampled with LatinHypercube method ähnelt.
        /// </summary>
        internal static string Distribution0WithItsCurrentParametersCannotBeSampledWithLatinHypercubeMethod {
            get {
                return ResourceManager.GetString("Distribution0WithItsCurrentParametersCannotBeSampledWithLatinHypercubeMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This {0} does not belong to the matrix ähnelt.
        /// </summary>
        internal static string DoesNotBelongToMatrix0 {
            get {
                return ResourceManager.GetString("DoesNotBelongToMatrix0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not have a numeric value. ähnelt.
        /// </summary>
        internal static string DoesNotHaveANumericValue {
            get {
                return ResourceManager.GetString("DoesNotHaveANumericValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not yet have a value. ähnelt.
        /// </summary>
        internal static string DoesNotYetHaveAValue {
            get {
                return ResourceManager.GetString("DoesNotYetHaveAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} domain can not have boundaries ähnelt.
        /// </summary>
        internal static string DomainCanNotHaveBundaries0 {
            get {
                return ResourceManager.GetString("DomainCanNotHaveBundaries0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index is out of the domain  ähnelt.
        /// </summary>
        internal static string DomainIndexOutOfRange {
            get {
                return ResourceManager.GetString("DomainIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domains section is not allowed in submodels. ähnelt.
        /// </summary>
        internal static string DomainsSectionIsNotAllowedInSubmodels {
            get {
                return ResourceManager.GetString("DomainsSectionIsNotAllowedInSubmodels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domains section must contain a domain and a name ähnelt.
        /// </summary>
        internal static string DomainsSectionMustContainADomainAndAName {
            get {
                return ResourceManager.GetString("DomainsSectionMustContainADomainAndAName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values in the domain are not ordered distinct, or out of range  ähnelt.
        /// </summary>
        internal static string DomainValueOutOfRange {
            get {
                return ResourceManager.GetString("DomainValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated set ähnelt.
        /// </summary>
        internal static string DuplicatedSet {
            get {
                return ResourceManager.GetString("DuplicatedSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated entries detected in data bound to {0} ähnelt.
        /// </summary>
        internal static string DuplicateEntriesDetectedInDataBoundTo0 {
            get {
                return ResourceManager.GetString("DuplicateEntriesDetectedInDataBoundTo0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A variable of the same key already exists  ähnelt.
        /// </summary>
        internal static string DuplicateKey {
            get {
                return ResourceManager.GetString("DuplicateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate name {0} ähnelt.
        /// </summary>
        internal static string DuplicateName0 {
            get {
                return ResourceManager.GetString("DuplicateName0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate Parameter ähnelt.
        /// </summary>
        internal static string DuplicateParameter {
            get {
                return ResourceManager.GetString("DuplicateParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate row names: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string DuplicateRowNames {
            get {
                return ResourceManager.GetString("DuplicateRowNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate TokKind for TokKindEnum value ähnelt.
        /// </summary>
        internal static string DuplicateTokKindForTokKindEnumValue {
            get {
                return ResourceManager.GetString("DuplicateTokKindForTokKindEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate Decision ähnelt.
        /// </summary>
        internal static string DuplicateVariable {
            get {
                return ResourceManager.GetString("DuplicateVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is a duplicate Decision ähnelt.
        /// </summary>
        internal static string DuplicateVariable0 {
            get {
                return ResourceManager.GetString("DuplicateVariable0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Each element in the list must be a Tuple ähnelt.
        /// </summary>
        internal static string EachElementInTheListMustBeATuple {
            get {
                return ResourceManager.GetString("EachElementInTheListMustBeATuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Each operation must have at least one input ähnelt.
        /// </summary>
        internal static string EachOperationMustHaveAtLeastOneInput {
            get {
                return ResourceManager.GetString("EachOperationMustHaveAtLeastOneInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Each scenario should be initiated with Probability and Value ähnelt.
        /// </summary>
        internal static string EachScenarioShouldHaveProbabilityAndValue {
            get {
                return ResourceManager.GetString("EachScenarioShouldHaveProbabilityAndValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ElementOf must have exactly two arguments ähnelt.
        /// </summary>
        internal static string ElementOfMustHaveExactlyTwoArguments {
            get {
                return ResourceManager.GetString("ElementOfMustHaveExactlyTwoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ElementOf only allows integer and enumerated domains. ähnelt.
        /// </summary>
        internal static string ElementOfOnlyAllowsIntegerAndEnumeratedDomains {
            get {
                return ResourceManager.GetString("ElementOfOnlyAllowsIntegerAndEnumeratedDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples in ElementOf are not bound to any data source ähnelt.
        /// </summary>
        internal static string ElementOfTuplesAreUnbound {
            get {
                return ResourceManager.GetString("ElementOfTuplesAreUnbound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty argument list in Equal ähnelt.
        /// </summary>
        internal static string EmptyArgListInEqual {
            get {
                return ResourceManager.GetString("EmptyArgListInEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty argument list in Product ähnelt.
        /// </summary>
        internal static string EmptyArgListInProduct {
            get {
                return ResourceManager.GetString("EmptyArgListInProduct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty argument list in Unequal ähnelt.
        /// </summary>
        internal static string EmptyArgListInUnequal {
            get {
                return ResourceManager.GetString("EmptyArgListInUnequal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The heap is empty  ähnelt.
        /// </summary>
        internal static string EmptyHeap {
            get {
                return ResourceManager.GetString("EmptyHeap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty INDEP section ähnelt.
        /// </summary>
        internal static string EmptyINDEPSection {
            get {
                return ResourceManager.GetString("EmptyINDEPSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enum domain cannot contain duplicate value &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string EnumDomainCannotContainDuplicatedValues0 {
            get {
                return ResourceManager.GetString("EnumDomainCannotContainDuplicatedValues0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enum domain cannot contain null or empty string values ähnelt.
        /// </summary>
        internal static string EnumDomainCannotContainNullOrEmptyStringValue {
            get {
                return ResourceManager.GetString("EnumDomainCannotContainNullOrEmptyStringValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enum domain must have at least one element ähnelt.
        /// </summary>
        internal static string EnumDomainMustHaveAtLeastOneElement {
            get {
                return ResourceManager.GetString("EnumDomainMustHaveAtLeastOneElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EnumDomain(TAnEnum) requires Enumeration Type as argument ähnelt.
        /// </summary>
        internal static string EnumDomainRequiresEnumerationTypeAsArgument {
            get {
                return ResourceManager.GetString("EnumDomainRequiresEnumerationTypeAsArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enumerated domains are not supported in OML ähnelt.
        /// </summary>
        internal static string EnumeratedDomainsAreNotSupportedInOML {
            get {
                return ResourceManager.GetString("EnumeratedDomainsAreNotSupportedInOML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot enumerate elements in an empty domain  ähnelt.
        /// </summary>
        internal static string EnumerateEmptyDomain {
            get {
                return ResourceManager.GetString("EnumerateEmptyDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EnumerateInterimSolutions in ConstraintSolverParams must be enabled for local search ähnelt.
        /// </summary>
        internal static string EnumerateInterimSolutionsMustBeEnabledForLocalSearch {
            get {
                return ResourceManager.GetString("EnumerateInterimSolutionsMustBeEnabledForLocalSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty character literal ähnelt.
        /// </summary>
        internal static string ErrObjEmptyCharacterLiteral {
            get {
                return ResourceManager.GetString("ErrObjEmptyCharacterLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End-of-file found, &apos;*/&apos; expected ähnelt.
        /// </summary>
        internal static string ErrObjEndOfFileFoundExpected {
            get {
                return ResourceManager.GetString("ErrObjEndOfFileFoundExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected character &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ErrObjExpectedCharacter0 {
            get {
                return ResourceManager.GetString("ErrObjExpectedCharacter0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Floating-point constant is outside the range of type &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ErrObjFloatingPointConstantIsOutsideTheRangeOfType0 {
            get {
                return ResourceManager.GetString("ErrObjFloatingPointConstantIsOutsideTheRangeOfType0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Integral constant is too large ähnelt.
        /// </summary>
        internal static string ErrObjIntegralConstantIsTooLarge {
            get {
                return ResourceManager.GetString("ErrObjIntegralConstantIsTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyword, identifier, or string expected after verbatim specifier: @ ähnelt.
        /// </summary>
        internal static string ErrObjKeywordIdentifierOrStringExpectedAfterVerbatimSpecifier {
            get {
                return ResourceManager.GetString("ErrObjKeywordIdentifierOrStringExpectedAfterVerbatimSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Newline in constant ähnelt.
        /// </summary>
        internal static string ErrObjNewlineInConstant {
            get {
                return ResourceManager.GetString("ErrObjNewlineInConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number past column {0} ähnelt.
        /// </summary>
        internal static string ErrObjNumberPastColumn0 {
            get {
                return ResourceManager.GetString("ErrObjNumberPastColumn0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many characters in character literal ähnelt.
        /// </summary>
        internal static string ErrObjTooManyCharactersInCharacterLiteral {
            get {
                return ResourceManager.GetString("ErrObjTooManyCharactersInCharacterLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ErrObjUnexpected0 {
            get {
                return ResourceManager.GetString("ErrObjUnexpected0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected character &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ErrObjUnexpectedCharacter0 {
            get {
                return ResourceManager.GetString("ErrObjUnexpectedCharacter0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized escape sequence ähnelt.
        /// </summary>
        internal static string ErrObjUnrecognizedEscapeSequence {
            get {
                return ResourceManager.GetString("ErrObjUnrecognizedEscapeSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unterminated string literal ähnelt.
        /// </summary>
        internal static string ErrObjUnterminatedStringLiteral {
            get {
                return ResourceManager.GetString("ErrObjUnterminatedStringLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error {0}({1},{2})-({3},{4}): {5} ähnelt.
        /// </summary>
        internal static string Error012345 {
            get {
                return ResourceManager.GetString("Error012345", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code {0} :token {3}:line {1}: {2} ähnelt.
        /// </summary>
        internal static string ErrorCode0Token3Line12 {
            get {
                return ResourceManager.GetString("ErrorCode0Token3Line12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error filling solver parameters with directive. ähnelt.
        /// </summary>
        internal static string ErrorFillingSolverParametersWithDirective {
            get {
                return ResourceManager.GetString("ErrorFillingSolverParametersWithDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred when solving the basis  ähnelt.
        /// </summary>
        internal static string ErrorInBasisSolve {
            get {
                return ResourceManager.GetString("ErrorInBasisSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error in basis solve operation! {0} {1} {2} ähnelt.
        /// </summary>
        internal static string ErrorInBasisSolveOperation012 {
            get {
                return ResourceManager.GetString("ErrorInBasisSolveOperation012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error in sampling. Result needs to be a 32 bit integer, but it is not. successProbability argument of the distribution is probably too small ähnelt.
        /// </summary>
        internal static string ErrorSamplingResultNeedsToBeInteger {
            get {
                return ResourceManager.GetString("ErrorSamplingResultNeedsToBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error token ähnelt.
        /// </summary>
        internal static string ErrorToken {
            get {
                return ResourceManager.GetString("ErrorToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EV: {0} ähnelt.
        /// </summary>
        internal static string Ev0 {
            get {
                return ResourceManager.GetString("Ev0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Evaluation call count: {0}. ähnelt.
        /// </summary>
        internal static string EvaluationCallCount0 {
            get {
                return ResourceManager.GetString("EvaluationCallCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EVPI: {0} ähnelt.
        /// </summary>
        internal static string Evpi0 {
            get {
                return ResourceManager.GetString("Evpi0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ExactlyMofN expects Boolean Terms ähnelt.
        /// </summary>
        internal static string ExactlyMofNExpectsBooleanTerms {
            get {
                return ResourceManager.GetString("ExactlyMofNExpectsBooleanTerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exceeded iteration limit of {0} ähnelt.
        /// </summary>
        internal static string ExceededIterationLimit {
            get {
                return ResourceManager.GetString("ExceededIterationLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model size exceeds evaluation limit - please see About dialog for more information. ähnelt.
        /// </summary>
        internal static string ExcelModelTooLarge {
            get {
                return ResourceManager.GetString("ExcelModelTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Exception: {1} ähnelt.
        /// </summary>
        internal static string Exception1 {
            get {
                return ResourceManager.GetString("Exception1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exception thrown from Cholesky thread ähnelt.
        /// </summary>
        internal static string ExceptionThrownFromCholeskyThread {
            get {
                return ResourceManager.GetString("ExceptionThrownFromCholeskyThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expect a list of integers or an Integers range ähnelt.
        /// </summary>
        internal static string ExpectAListOfIntegersOrAnIntegersRange {
            get {
                return ResourceManager.GetString("ExpectAListOfIntegersOrAnIntegersRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string Expected0 {
            get {
                return ResourceManager.GetString("Expected0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected {0} arguments but received {1} ähnelt.
        /// </summary>
        internal static string Expected0ArgumentsButSaw1 {
            get {
                return ResourceManager.GetString("Expected0ArgumentsButSaw1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected &apos;Parameters&apos;, &apos;Decisions&apos;, &apos;Goals&apos;, or &apos;Constraints&apos; ähnelt.
        /// </summary>
        internal static string ExpectedAllowedSectionSymbols {
            get {
                return ResourceManager.GetString("ExpectedAllowedSectionSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected Identifier ähnelt.
        /// </summary>
        internal static string ExpectedIdentifier {
            get {
                return ResourceManager.GetString("ExpectedIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected Model ähnelt.
        /// </summary>
        internal static string ExpectedModel {
            get {
                return ResourceManager.GetString("ExpectedModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected numeric value ähnelt.
        /// </summary>
        internal static string ExpectedNumericValue {
            get {
                return ResourceManager.GetString("ExpectedNumericValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected Tuples ähnelt.
        /// </summary>
        internal static string ExpectedTuples {
            get {
                return ResourceManager.GetString("ExpectedTuples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expecting {0} indexes ähnelt.
        /// </summary>
        internal static string ExpectingIndexes0 {
            get {
                return ResourceManager.GetString("ExpectingIndexes0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} expects exactly {1} indexes but {2} were provided ähnelt.
        /// </summary>
        internal static string ExpectsExactly1IndexesBut2WereProvided {
            get {
                return ResourceManager.GetString("ExpectsExactly1IndexesBut2WereProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expired evaluation copy ähnelt.
        /// </summary>
        internal static string ExpiredEvaluationCopy {
            get {
                return ResourceManager.GetString("ExpiredEvaluationCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expression cannot be converted to Term ähnelt.
        /// </summary>
        internal static string ExpressionCannotBeConvertedToTerm {
            get {
                return ResourceManager.GetString("ExpressionCannotBeConvertedToTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expression from wrong RewriteSystem! ähnelt.
        /// </summary>
        internal static string ExpressionFromWrongRewriteSystem {
            get {
                return ResourceManager.GetString("ExpressionFromWrongRewriteSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expression term could not be resolved ähnelt.
        /// </summary>
        internal static string ExpressionTermCouldNotBeResolved {
            get {
                return ResourceManager.GetString("ExpressionTermCouldNotBeResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factoring failed. Substituted {0} slack variables. ähnelt.
        /// </summary>
        internal static string FactoringFailedSubstituted0SlackVariables {
            get {
                return ResourceManager.GetString("FactoringFailedSubstituted0SlackVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fatal error ähnelt.
        /// </summary>
        internal static string FatalError {
            get {
                return ResourceManager.GetString("FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FilteredSum not yet implemented ähnelt.
        /// </summary>
        internal static string FilteredSumNotYetImplemented {
            get {
                return ResourceManager.GetString("FilteredSumNotYetImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finishing point = ähnelt.
        /// </summary>
        internal static string FinishingPoint {
            get {
                return ResourceManager.GetString("FinishingPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finishing value = ähnelt.
        /// </summary>
        internal static string FinishingValue {
            get {
                return ResourceManager.GetString("FinishingValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} finishing value = ähnelt.
        /// </summary>
        internal static string FinishingValue0 {
            get {
                return ResourceManager.GetString("FinishingValue0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die FiniteSolve needs a Model invocation ähnelt.
        /// </summary>
        internal static string FiniteSolveNeedsAModelInvocation {
            get {
                return ResourceManager.GetString("FiniteSolveNeedsAModelInvocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First argument for binomial distribution must be integer ähnelt.
        /// </summary>
        internal static string FirstArgumentForBinomialDistributionMustBeInteger {
            get {
                return ResourceManager.GetString("FirstArgumentForBinomialDistributionMustBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First argument of TupleMember is not a tuple ähnelt.
        /// </summary>
        internal static string FirstArgumentOfTupleMemberIsNotATuple {
            get {
                return ResourceManager.GetString("FirstArgumentOfTupleMemberIsNotATuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Foreach cannot be used as a goal ähnelt.
        /// </summary>
        internal static string ForeachCannotBeUsedAsAGoal {
            get {
                return ResourceManager.GetString("ForeachCannotBeUsedAsAGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Function &apos;{0}[]&apos; not understood in expression ähnelt.
        /// </summary>
        internal static string FunctionNotUnderstoodInExpression {
            get {
                return ResourceManager.GetString("FunctionNotUnderstoodInExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax error in Foreach statement ähnelt.
        /// </summary>
        internal static string GeneralWrongForeach {
            get {
                return ResourceManager.GetString("GeneralWrongForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GetPowerSetListBaseline is called on a non-set/non-list variable ähnelt.
        /// </summary>
        internal static string GetPowerSetListBaselineIsCalledOnANonSetNonListVar {
            get {
                return ResourceManager.GetString("GetPowerSetListBaselineIsCalledOnANonSetNonListVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goal cannot be a constant ähnelt.
        /// </summary>
        internal static string GoalCannotBeAConstant {
            get {
                return ResourceManager.GetString("GoalCannotBeAConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goal must be an integer function ähnelt.
        /// </summary>
        internal static string GoalMustBeAnIntegerFunction {
            get {
                return ResourceManager.GetString("GoalMustBeAnIntegerFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goals cannot contain Decisions multiplied by RandomParameters ähnelt.
        /// </summary>
        internal static string GoalsCannotContainDecisionsMultipliedByRandomParameters {
            get {
                return ResourceManager.GetString("GoalsCannotContainDecisionsMultipliedByRandomParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add goals to CspComposite  ähnelt.
        /// </summary>
        internal static string GoalsNotSupportedComposite {
            get {
                return ResourceManager.GetString("GoalsNotSupportedComposite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goals section can contains only Minimize or Maximize clauses ähnelt.
        /// </summary>
        internal static string GoalsSectionCanContainsOnlyMinimizeOrMaximize {
            get {
                return ResourceManager.GetString("GoalsSectionCanContainsOnlyMinimizeOrMaximize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goals section can contains only Minimize or Maximize clauses, and not {0} ähnelt.
        /// </summary>
        internal static string GoalsSectionCanContainsOnlyMinimizeOrMaximizeAndNot0 {
            get {
                return ResourceManager.GetString("GoalsSectionCanContainsOnlyMinimizeOrMaximizeAndNot0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goal was not Minimize or Maximize. ähnelt.
        /// </summary>
        internal static string GoalWasNotMinimizeOrMaximize {
            get {
                return ResourceManager.GetString("GoalWasNotMinimizeOrMaximize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goal function cannot have an empty domain ähnelt.
        /// </summary>
        internal static string GoalWithEmptyDomain {
            get {
                return ResourceManager.GetString("GoalWithEmptyDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has multiple values. ähnelt.
        /// </summary>
        internal static string HasMultipleValues {
            get {
                return ResourceManager.GetString("HasMultipleValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has to be an Invocation ähnelt.
        /// </summary>
        internal static string HasToBeInvocation0 {
            get {
                return ResourceManager.GetString("HasToBeInvocation0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This solver does not support quadratic programming. ähnelt.
        /// </summary>
        internal static string HSDDoesNotHandleQuadratic {
            get {
                return ResourceManager.GetString("HSDDoesNotHandleQuadratic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Identifier expected ähnelt.
        /// </summary>
        internal static string IdentifierExpected {
            get {
                return ResourceManager.GetString("IdentifierExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model is ill-formed and cannot be saved to OML ähnelt.
        /// </summary>
        internal static string IllFormedModelCannotBeSaved {
            get {
                return ResourceManager.GetString("IllFormedModelCannotBeSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ill-formed rule ähnelt.
        /// </summary>
        internal static string IllFormedRule {
            get {
                return ResourceManager.GetString("IllFormedRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid option: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ImproperOption0 {
            get {
                return ResourceManager.GetString("ImproperOption0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input Terms do not belong to the same CspModel instance  ähnelt.
        /// </summary>
        internal static string IncompatibleInputTerms {
            get {
                return ResourceManager.GetString("IncompatibleInputTerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The matrices have incompatible sizes  ähnelt.
        /// </summary>
        internal static string IncompatibleMatrixSize {
            get {
                return ResourceManager.GetString("IncompatibleMatrixSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The vectors have incompatible sizes  ähnelt.
        /// </summary>
        internal static string IncompatibleVectorSize {
            get {
                return ResourceManager.GetString("IncompatibleVectorSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In constraint takes two argument and the second argument must be either a list or a tuple ähnelt.
        /// </summary>
        internal static string InConstraintTakesTwoArgumentAndTheSecondArgumentMustBeEitherAListOrATuple {
            get {
                return ResourceManager.GetString("InConstraintTakesTwoArgumentAndTheSecondArgumentMustBeEitherAListOrATuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index [{0}] cannot be found ähnelt.
        /// </summary>
        internal static string IndexCanNotBeFound0 {
            get {
                return ResourceManager.GetString("IndexCanNotBeFound0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One of the indexes in the two dimensional Index constraint is out of range  ähnelt.
        /// </summary>
        internal static string IndexConstraintOutOfRange {
            get {
                return ResourceManager.GetString("IndexConstraintOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indexed decisions may not be probed ähnelt.
        /// </summary>
        internal static string IndexedDecisionsMayNotBeProbed {
            get {
                return ResourceManager.GetString("IndexedDecisionsMayNotBeProbed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indexed decision used without index ähnelt.
        /// </summary>
        internal static string IndexedDecisionUsedWithoutIndex {
            get {
                return ResourceManager.GetString("IndexedDecisionUsedWithoutIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal Error: should be no way that the ixVar can have a value not in the index set  ähnelt.
        /// </summary>
        internal static string IndexError {
            get {
                return ResourceManager.GetString("IndexError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indexes [{0}] cannot be found ähnelt.
        /// </summary>
        internal static string IndexesCanNotBeFound0 {
            get {
                return ResourceManager.GetString("IndexesCanNotBeFound0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index is not constant ähnelt.
        /// </summary>
        internal static string IndexIsNotConstant {
            get {
                return ResourceManager.GetString("IndexIsNotConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index out of range ähnelt.
        /// </summary>
        internal static string IndexOutOfRange {
            get {
                return ResourceManager.GetString("IndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index variable ranges do not match array shape ähnelt.
        /// </summary>
        internal static string IndexVariableRangesDoNotMatchArrayShape {
            get {
                return ResourceManager.GetString("IndexVariableRangesDoNotMatchArrayShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} for parameter {1} ähnelt.
        /// </summary>
        internal static string IndexWrongForParameter01 {
            get {
                return ResourceManager.GetString("IndexWrongForParameter01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die InfeasiblePrimal due to UnboundedPrimal ähnelt.
        /// </summary>
        internal static string InfeasiblePrimalDueToUnboundedPrimal {
            get {
                return ResourceManager.GetString("InfeasiblePrimalDueToUnboundedPrimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial non-zeros A[{0}] ähnelt.
        /// </summary>
        internal static string InitialNonZerosA0 {
            get {
                return ResourceManager.GetString("InitialNonZerosA0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial non-zeros A[{0}] Q[{1}] ähnelt.
        /// </summary>
        internal static string InitialNonZerosA0Q1 {
            get {
                return ResourceManager.GetString("InitialNonZerosA0Q1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die InOr constraint takes at least one argument ähnelt.
        /// </summary>
        internal static string InOrConstraintTakesAtLeastOneArgument {
            get {
                return ResourceManager.GetString("InOrConstraintTakesAtLeastOneArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inputs {0} and {1} have different symbol domains. ähnelt.
        /// </summary>
        internal static string Inputs0And1HaveDifferentSymbolDomains {
            get {
                return ResourceManager.GetString("Inputs0And1HaveDifferentSymbolDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Integer variables are not supported ähnelt.
        /// </summary>
        internal static string IntegerVariablesAreNotSupported {
            get {
                return ResourceManager.GetString("IntegerVariablesAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The integrality setting may not be redefined. ähnelt.
        /// </summary>
        internal static string IntegralityMayNotBeRedefined {
            get {
                return ResourceManager.GetString("IntegralityMayNotBeRedefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is registered with the {1} interface but that interface is incompatible with {2} ähnelt.
        /// </summary>
        internal static string InterfaceIncompatibleWithProblem {
            get {
                return ResourceManager.GetString("InterfaceIncompatibleWithProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interior Point: after reduction, this model contains no variables ähnelt.
        /// </summary>
        internal static string InteriorPointAfterReductionThisModelContainsNoVariables {
            get {
                return ResourceManager.GetString("InteriorPointAfterReductionThisModelContainsNoVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interior Point cannot load a model with no variables ähnelt.
        /// </summary>
        internal static string InteriorPointCannotLoadAModelWithNoVariables {
            get {
                return ResourceManager.GetString("InteriorPointCannotLoadAModelWithNoVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interior Point currently requires a goal ähnelt.
        /// </summary>
        internal static string InteriorPointCurrentlyRequiresAGoal {
            get {
                return ResourceManager.GetString("InteriorPointCurrentlyRequiresAGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interior point solver can&apos;t process the model: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string InteriorPointSolverCanTProcessTheModel01 {
            get {
                return ResourceManager.GetString("InteriorPointSolverCanTProcessTheModel01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die InteriorPointSolver does not support integer variables ähnelt.
        /// </summary>
        internal static string InteriorPointSolverDoesNotSupportIntegerVariables {
            get {
                return ResourceManager.GetString("InteriorPointSolverDoesNotSupportIntegerVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal error ähnelt.
        /// </summary>
        internal static string InternalError {
            get {
                return ResourceManager.GetString("InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal error: Bad set element ähnelt.
        /// </summary>
        internal static string InternalErrorBadSetElement {
            get {
                return ResourceManager.GetString("InternalErrorBadSetElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interrupted: exit RepeatPivots {0} ähnelt.
        /// </summary>
        internal static string InterruptedExitRepeatPivots0 {
            get {
                return ResourceManager.GetString("InterruptedExitRepeatPivots0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Terms in Index constraints must be Integer Terms ähnelt.
        /// </summary>
        internal static string IntMapNonIntegerIndex {
            get {
                return ResourceManager.GetString("IntMapNonIntegerIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid argument count for operator {0}. ähnelt.
        /// </summary>
        internal static string InvalidArgumentCountForOperator0 {
            get {
                return ResourceManager.GetString("InvalidArgumentCountForOperator0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for binomial distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForBinomialDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForBinomialDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Distribution was passed an invalid numeric value. ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for exponential distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForExponentialDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForExponentialDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for geometric distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForGeometricDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForGeometricDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for log-normal distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForLognormalDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForLognormalDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for normal distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForNormalDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForNormalDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for scenarios distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForScenariosDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForScenariosDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid arguments for uniform distribution ähnelt.
        /// </summary>
        internal static string InvalidArgumentsForUniformDistribution {
            get {
                return ResourceManager.GetString("InvalidArgumentsForUniformDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The baseline set is not an integer set ähnelt.
        /// </summary>
        internal static string InvalidBaselineSet {
            get {
                return ResourceManager.GetString("InvalidBaselineSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid bounds ähnelt.
        /// </summary>
        internal static string InvalidBounds {
            get {
                return ResourceManager.GetString("InvalidBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Column variable is not a CspVariable with a symbol domain but the table constraint rows have symbol values  ähnelt.
        /// </summary>
        internal static string InvalidColumnVar {
            get {
                return ResourceManager.GetString("InvalidColumnVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invoked operations on composite variables are invalid ähnelt.
        /// </summary>
        internal static string InvalidCompositeVariableOperation {
            get {
                return ResourceManager.GetString("InvalidCompositeVariableOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid cone type: {0} ähnelt.
        /// </summary>
        internal static string InvalidConeType0 {
            get {
                return ResourceManager.GetString("InvalidConeType0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid constraint encountered ähnelt.
        /// </summary>
        internal static string InvalidConstraintEncountered {
            get {
                return ResourceManager.GetString("InvalidConstraintEncountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid CSECTION format ähnelt.
        /// </summary>
        internal static string InvalidCSectionFormat {
            get {
                return ResourceManager.GetString("InvalidCSectionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Precision for a decimal domain must be 1, 10, 100, 1000, or 10000  ähnelt.
        /// </summary>
        internal static string InvalidDecimalPrecision {
            get {
                return ResourceManager.GetString("InvalidDecimalPrecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Decision definition ähnelt.
        /// </summary>
        internal static string InvalidDecisionDefinition {
            get {
                return ResourceManager.GetString("InvalidDecisionDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid domain ähnelt.
        /// </summary>
        internal static string InvalidDomain {
            get {
                return ResourceManager.GetString("InvalidDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid domain for CP decision ähnelt.
        /// </summary>
        internal static string InvalidDomainForFDVariable {
            get {
                return ResourceManager.GetString("InvalidDomainForFDVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid domain for LP decision ähnelt.
        /// </summary>
        internal static string InvalidDomainForLinearVariable {
            get {
                return ResourceManager.GetString("InvalidDomainForLinearVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid domain for SAT decision ähnelt.
        /// </summary>
        internal static string InvalidDomainForSATVariable {
            get {
                return ResourceManager.GetString("InvalidDomainForSATVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid operand for Factorial  ähnelt.
        /// </summary>
        internal static string InvalidFactorialOperand {
            get {
                return ResourceManager.GetString("InvalidFactorialOperand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Finite constraint ähnelt.
        /// </summary>
        internal static string InvalidFiniteConstraint {
            get {
                return ResourceManager.GetString("InvalidFiniteConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Finite goal ähnelt.
        /// </summary>
        internal static string InvalidFiniteGoal {
            get {
                return ResourceManager.GetString("InvalidFiniteGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal Error: Force only applies to Boolean Terms  ähnelt.
        /// </summary>
        internal static string InvalidForceOperation {
            get {
                return ResourceManager.GetString("InvalidForceOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid form for Sos1 constraint ähnelt.
        /// </summary>
        internal static string InvalidFormForSos1Constraint {
            get {
                return ResourceManager.GetString("InvalidFormForSos1Constraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid form for Sos2 constraint ähnelt.
        /// </summary>
        internal static string InvalidFormForSos2Constraint {
            get {
                return ResourceManager.GetString("InvalidFormForSos2Constraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid index {0} for set. ähnelt.
        /// </summary>
        internal static string InvalidIndexForSet0 {
            get {
                return ResourceManager.GetString("InvalidIndexForSet0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid interval. ähnelt.
        /// </summary>
        internal static string InvalidInterval {
            get {
                return ResourceManager.GetString("InvalidInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The lowerbound of the interval is greater than the upperbound  ähnelt.
        /// </summary>
        internal static string InvalidIntervalDomainDefinition {
            get {
                return ResourceManager.GetString("InvalidIntervalDomainDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid IsElementOf detected in save ähnelt.
        /// </summary>
        internal static string InvalidIsElementOfDetectedInSave {
            get {
                return ResourceManager.GetString("InvalidIsElementOfDetectedInSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot call IsTrue on this Term  ähnelt.
        /// </summary>
        internal static string InvalidIsTrueCall {
            get {
                return ResourceManager.GetString("InvalidIsTrueCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot modify an existing key  ähnelt.
        /// </summary>
        internal static string InvalidKeyChange {
            get {
                return ResourceManager.GetString("InvalidKeyChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid linear constraint ähnelt.
        /// </summary>
        internal static string InvalidLinearConstraint {
            get {
                return ResourceManager.GetString("InvalidLinearConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid linear model: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string InvalidLinearModel {
            get {
                return ResourceManager.GetString("InvalidLinearModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid linear or quadratic term ähnelt.
        /// </summary>
        internal static string InvalidLinearOrQuadraticTerm {
            get {
                return ResourceManager.GetString("InvalidLinearOrQuadraticTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid linear term ähnelt.
        /// </summary>
        internal static string InvalidLinearTerm {
            get {
                return ResourceManager.GetString("InvalidLinearTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid list {0}. ähnelt.
        /// </summary>
        internal static string InvalidList0 {
            get {
                return ResourceManager.GetString("InvalidList0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A log event ID must be between 0 and 63  ähnelt.
        /// </summary>
        internal static string InvalidLogEventId {
            get {
                return ResourceManager.GetString("InvalidLogEventId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid matrix dimensions. ähnelt.
        /// </summary>
        internal static string InvalidMatrixDimensions {
            get {
                return ResourceManager.GetString("InvalidMatrixDimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid model for solver: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string InvalidModelForSolver01 {
            get {
                return ResourceManager.GetString("InvalidModelForSolver01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die invalid number ähnelt.
        /// </summary>
        internal static string InvalidNumber {
            get {
                return ResourceManager.GetString("InvalidNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid option for finite solver: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string InvalidOptionForFiniteSolver0 {
            get {
                return ResourceManager.GetString("InvalidOptionForFiniteSolver0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid option for linear solver: &apos;{0} ähnelt.
        /// </summary>
        internal static string InvalidOptionForLinearSolver0 {
            get {
                return ResourceManager.GetString("InvalidOptionForLinearSolver0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The parameter list cannot be null or empty  ähnelt.
        /// </summary>
        internal static string InvalidParams {
            get {
                return ResourceManager.GetString("InvalidParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The permutation is invalid  ähnelt.
        /// </summary>
        internal static string InvalidPermutation {
            get {
                return ResourceManager.GetString("InvalidPermutation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid row id. ähnelt.
        /// </summary>
        internal static string InvalidRowId {
            get {
                return ResourceManager.GetString("InvalidRowId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid row list or row tuple ähnelt.
        /// </summary>
        internal static string InvalidRowListOrRowTuple {
            get {
                return ResourceManager.GetString("InvalidRowListOrRowTuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid sampling method {0}. ähnelt.
        /// </summary>
        internal static string InvalidSamplingMethod0 {
            get {
                return ResourceManager.GetString("InvalidSamplingMethod0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid SAT constraint ähnelt.
        /// </summary>
        internal static string InvalidSATConstraint {
            get {
                return ResourceManager.GetString("InvalidSATConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid SAT literal ähnelt.
        /// </summary>
        internal static string InvalidSATLiteral {
            get {
                return ResourceManager.GetString("InvalidSATLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid SAT objective ähnelt.
        /// </summary>
        internal static string InvalidSATObjective {
            get {
                return ResourceManager.GetString("InvalidSATObjective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given values for constructing a set either are unordered or have duplicate values  ähnelt.
        /// </summary>
        internal static string InvalidSetDomainDefinition {
            get {
                return ResourceManager.GetString("InvalidSetDomainDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver instance is invalid  ähnelt.
        /// </summary>
        internal static string InvalidSolverInstance {
            get {
                return ResourceManager.GetString("InvalidSolverInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid symbol constant: this symbol does not exist in the given symbol domain  ähnelt.
        /// </summary>
        internal static string InvalidStringConstant {
            get {
                return ResourceManager.GetString("InvalidStringConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given symbols for constructing a symbol set have duplicate symbols  ähnelt.
        /// </summary>
        internal static string InvalidSymbolDomainDefinition {
            get {
                return ResourceManager.GetString("InvalidSymbolDomainDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Decisions involved in an expression must be added to the same model with AddDecision ähnelt.
        /// </summary>
        internal static string InvalidTermDecisionNotInModel {
            get {
                return ResourceManager.GetString("InvalidTermDecisionNotInModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: {1} ähnelt.
        /// </summary>
        internal static string InvalidTermExceptionMessage {
            get {
                return ResourceManager.GetString("InvalidTermExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Terms, Decisions, and Parameters involved in an expression must belong to the same model ähnelt.
        /// </summary>
        internal static string InvalidTermNotInModel {
            get {
                return ResourceManager.GetString("InvalidTermNotInModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Parameters involved in an expression must be added to the same model with AddParameter ähnelt.
        /// </summary>
        internal static string InvalidTermParameterNotInModel {
            get {
                return ResourceManager.GetString("InvalidTermParameterNotInModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid value for &apos;Directive&apos; option: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string InvalidValueForDirectiveOption0 {
            get {
                return ResourceManager.GetString("InvalidValueForDirectiveOption0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid value for linear solver option {0}: &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string InvalidValueForLinearSolverOption01 {
            get {
                return ResourceManager.GetString("InvalidValueForLinearSolverOption01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid value for option &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string InvalidValueForOption0 {
            get {
                return ResourceManager.GetString("InvalidValueForOption0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid value for &apos;Solver&apos; option: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string InvalidValueForSolverOption0 {
            get {
                return ResourceManager.GetString("InvalidValueForSolverOption0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The type of the value is unknown  ähnelt.
        /// </summary>
        internal static string InvalidValueType {
            get {
                return ResourceManager.GetString("InvalidValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid variable ähnelt.
        /// </summary>
        internal static string InvalidVariable {
            get {
                return ResourceManager.GetString("InvalidVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is a invalid variable. ähnelt.
        /// </summary>
        internal static string InvalidVariable0 {
            get {
                return ResourceManager.GetString("InvalidVariable0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid variable id. ähnelt.
        /// </summary>
        internal static string InvalidVariableId {
            get {
                return ResourceManager.GetString("InvalidVariableId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Decisions clause ähnelt.
        /// </summary>
        internal static string InvalidVariablesClause {
            get {
                return ResourceManager.GetString("InvalidVariablesClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invocation can not be used as a Set declaration ähnelt.
        /// </summary>
        internal static string InvocationCannotBeUsedAsSetDeclaration {
            get {
                return ResourceManager.GetString("InvocationCannotBeUsedAsSetDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPM core solution time = {0:F2} ähnelt.
        /// </summary>
        internal static string IpmCoreSolutionTime0 {
            get {
                return ResourceManager.GetString("IpmCoreSolutionTime0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IPM goal count has been reduced to 1 ähnelt.
        /// </summary>
        internal static string IPMGoalCountHasBeenReducedTo1 {
            get {
                return ResourceManager.GetString("IPMGoalCountHasBeenReducedTo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interior Point Method (IPM) solver currently supports a single goal only. 
        ///Please change the model so that it contains one goal, or use the Simplex solver. ähnelt.
        /// </summary>
        internal static string IPMSolverSupportOnlySingleGoal {
            get {
                return ResourceManager.GetString("IPMSolverSupportOnlySingleGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not a symbol ähnelt.
        /// </summary>
        internal static string IsNotASymbol {
            get {
                return ResourceManager.GetString("IsNotASymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a valid iteration term ähnelt.
        /// </summary>
        internal static string IsNotAValidIterationTerm {
            get {
                return ResourceManager.GetString("IsNotAValidIterationTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a valid Set ähnelt.
        /// </summary>
        internal static string IsNotAValidSet {
            get {
                return ResourceManager.GetString("IsNotAValidSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input {0} is not Boolean. ähnelt.
        /// </summary>
        internal static string IsNotBoolean {
            get {
                return ResourceManager.GetString("IsNotBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not declared as Tuples ähnelt.
        /// </summary>
        internal static string IsNotDeclaredAsTuples {
            get {
                return ResourceManager.GetString("IsNotDeclaredAsTuples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input {0} is not numeric. ähnelt.
        /// </summary>
        internal static string IsNotNumeric {
            get {
                return ResourceManager.GetString("IsNotNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input {0} is not a pair. ähnelt.
        /// </summary>
        internal static string IsNotPair {
            get {
                return ResourceManager.GetString("IsNotPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not symbolic ähnelt.
        /// </summary>
        internal static string IsNotSymbolic {
            get {
                return ResourceManager.GetString("IsNotSymbolic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Iteration count: {0}. ähnelt.
        /// </summary>
        internal static string IterationCount0 {
            get {
                return ResourceManager.GetString("IterationCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Iteration limit exceeded in ReplaceRepeated[{0},{1},{2}] ähnelt.
        /// </summary>
        internal static string IterationLimitExceededInReplaceRepeated {
            get {
                return ResourceManager.GetString("IterationLimitExceededInReplaceRepeated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  k     rp     rd     gap      k/t     mu   gamma C alpha       cx       time ähnelt.
        /// </summary>
        internal static string KRpRdGapKtMuGammaCAlphaCxTime {
            get {
                return ResourceManager.GetString("KRpRdGapKtMuGammaCAlphaCxTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  k      rp         rd         rg         k/t        mu    gamma       cx ähnelt.
        /// </summary>
        internal static string KRpRdRgKTMuGammaCx {
            get {
                return ResourceManager.GetString("KRpRdRgKTMuGammaCx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Large error in basic value: {0} ähnelt.
        /// </summary>
        internal static string LargeErrorInBasicValue0 {
            get {
                return ResourceManager.GetString("LargeErrorInBasicValue0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of {0} should be equal to sum of lengths of {1} and {2} ähnelt.
        /// </summary>
        internal static string LenghtShouldEqualToSumOfLengths012 {
            get {
                return ResourceManager.GetString("LenghtShouldEqualToSumOfLengths012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of {0} can&apos;t be zero ähnelt.
        /// </summary>
        internal static string LengthCanNotBeZero0 {
            get {
                return ResourceManager.GetString("LengthCanNotBeZero0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Limits: NonzeroLimit = {1}, MipVariableLimit = {2}, MipRowLimit = {3}, MipNonzeroLimit = {4}, CspTermLimit = {5}, Expiration = {6}. ähnelt.
        /// </summary>
        internal static string LicenseFormat0123456 {
            get {
                return ResourceManager.GetString("LicenseFormat0123456", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List contains a non string value ähnelt.
        /// </summary>
        internal static string ListContainsANonStringValue {
            get {
                return ResourceManager.GetString("ListContainsANonStringValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List contains a non numeric value ähnelt.
        /// </summary>
        internal static string ListContainsNonNumericValue {
            get {
                return ResourceManager.GetString("ListContainsNonNumericValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List did not contain Rules ähnelt.
        /// </summary>
        internal static string ListDidNotContainRules {
            get {
                return ResourceManager.GetString("ListDidNotContainRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List expected to be entirely symbols ähnelt.
        /// </summary>
        internal static string ListExpectedToBeEntirelySymbols {
            get {
                return ResourceManager.GetString("ListExpectedToBeEntirelySymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List must have at least one element ähnelt.
        /// </summary>
        internal static string ListMustHaveAtLeastOneElement {
            get {
                return ResourceManager.GetString("ListMustHaveAtLeastOneElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lists cannot mix symbols with literals ähnelt.
        /// </summary>
        internal static string ListsCannotMixSymbolsWithLiterals {
            get {
                return ResourceManager.GetString("ListsCannotMixSymbolsWithLiterals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading of MPS files containing special ordered sets is not supported. ähnelt.
        /// </summary>
        internal static string LoadingOfMPSFilesContainingSpecialOrderedSetsIsNotSupported {
            get {
                return ResourceManager.GetString("LoadingOfMPSFilesContainingSpecialOrderedSetsIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LoadLinearModel passed &apos;this&apos;! ähnelt.
        /// </summary>
        internal static string LoadLinearModelPassedThis {
            get {
                return ResourceManager.GetString("LoadLinearModelPassedThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Computational Progress of HSD Solver: ähnelt.
        /// </summary>
        internal static string LogComputationalProgressOfHSDSolver {
            get {
                return ResourceManager.GetString("LogComputationalProgressOfHSDSolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logical Symbol {0} could not be made a Decision ähnelt.
        /// </summary>
        internal static string LogicalSymbolCouldNotBeMadeAVariable {
            get {
                return ResourceManager.GetString("LogicalSymbolCouldNotBeMadeAVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lower bound cannot be larger than upper bound ähnelt.
        /// </summary>
        internal static string LowerBoundCannotBeLargerThanUpperBound {
            get {
                return ResourceManager.GetString("LowerBoundCannotBeLargerThanUpperBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die lower triangular coordinate seen ähnelt.
        /// </summary>
        internal static string LowerTriangularCoordinateSeen {
            get {
                return ResourceManager.GetString("LowerTriangularCoordinateSeen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map (array indexing) size limit of {0} elements exceeded ähnelt.
        /// </summary>
        internal static string MapArrayIndexingSizeLimitExceeded {
            get {
                return ResourceManager.GetString("MapArrayIndexingSizeLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mapping of stochastic model is not supported ähnelt.
        /// </summary>
        internal static string MappingOfStochasticModelIsNotSupported {
            get {
                return ResourceManager.GetString("MappingOfStochasticModelIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix dimensions are not valid. ähnelt.
        /// </summary>
        internal static string MatrixDimensionsAreNotValid {
            get {
                return ResourceManager.GetString("MatrixDimensionsAreNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix dimensions do not match. ähnelt.
        /// </summary>
        internal static string MatrixDimensionsDoNotMatch {
            get {
                return ResourceManager.GetString("MatrixDimensionsDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix is not positive definite. ähnelt.
        /// </summary>
        internal static string MatrixIsNotPositiveDefinite {
            get {
                return ResourceManager.GetString("MatrixIsNotPositiveDefinite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix is not square. ähnelt.
        /// </summary>
        internal static string MatrixIsNotSquare {
            get {
                return ResourceManager.GetString("MatrixIsNotSquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix is not symmetric. ähnelt.
        /// </summary>
        internal static string MatrixIsNotSymmetric {
            get {
                return ResourceManager.GetString("MatrixIsNotSymmetric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix is rank deficient. ähnelt.
        /// </summary>
        internal static string MatrixIsRankDeficient {
            get {
                return ResourceManager.GetString("MatrixIsRankDeficient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix is singular ähnelt.
        /// </summary>
        internal static string MatrixIsSingular {
            get {
                return ResourceManager.GetString("MatrixIsSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Matrix row dimensions must agree. ähnelt.
        /// </summary>
        internal static string MatrixRowDimensionsMustAgree {
            get {
                return ResourceManager.GetString("MatrixRowDimensionsMustAgree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximize problem ähnelt.
        /// </summary>
        internal static string MaximizeProblem {
            get {
                return ResourceManager.GetString("MaximizeProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum iterations exceeded ähnelt.
        /// </summary>
        internal static string MaximumIterationsExceeded {
            get {
                return ResourceManager.GetString("MaximumIterationsExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of iterations should be positive ähnelt.
        /// </summary>
        internal static string MaximumNumberOfIterationsShouldBePositive {
            get {
                return ResourceManager.GetString("MaximumNumberOfIterationsShouldBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum time exceeded ähnelt.
        /// </summary>
        internal static string MaximumTimeExceeded {
            get {
                return ResourceManager.GetString("MaximumTimeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft Solver Foundation {0} {1} Edition ähnelt.
        /// </summary>
        internal static string MicrosoftSolverFoundationVersion01 {
            get {
                return ResourceManager.GetString("MicrosoftSolverFoundationVersion01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimize problem ähnelt.
        /// </summary>
        internal static string MinimizeProblem {
            get {
                return ResourceManager.GetString("MinimizeProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum bound can not be bigger than maximum bound ähnelt.
        /// </summary>
        internal static string MinimumBundaryBiggerThanMaximumBundary {
            get {
                return ResourceManager.GetString("MinimumBundaryBiggerThanMaximumBundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After rounding, the minimum bound {0} is bigger than the maximum bound {1} ähnelt.
        /// </summary>
        internal static string MinimumBundaryBiggerThanMaximumBundaryAfterRound01 {
            get {
                return ResourceManager.GetString("MinimumBundaryBiggerThanMaximumBundaryAfterRound01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die minimum degree key unmatched ähnelt.
        /// </summary>
        internal static string MinimumDegreeKeyUnmatched {
            get {
                return ResourceManager.GetString("MinimumDegreeKeyUnmatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing parameter value: {0}({1}) ähnelt.
        /// </summary>
        internal static string MissingParameterValue {
            get {
                return ResourceManager.GetString("MissingParameterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mixed boolean and integer types unexpected in argument list ähnelt.
        /// </summary>
        internal static string MixedBooleanAndIntegerTypesUnexpectedInArgumentList {
            get {
                return ResourceManager.GetString("MixedBooleanAndIntegerTypesUnexpectedInArgumentList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model cannot be analyzed ähnelt.
        /// </summary>
        internal static string ModelCannotBeAnalyzed {
            get {
                return ResourceManager.GetString("ModelCannotBeAnalyzed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die model could not be null ähnelt.
        /// </summary>
        internal static string ModelCouldNotBeNull {
            get {
                return ResourceManager.GetString("ModelCouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model is infeasible or unknown. Cannot access ConstraintSolverSolution.GetValue ähnelt.
        /// </summary>
        internal static string ModelHasNoSolution {
            get {
                return ResourceManager.GetString("ModelHasNoSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation is invalid because the model has not been differentiated. ähnelt.
        /// </summary>
        internal static string ModelHasNotBeenDifferentiated {
            get {
                return ResourceManager.GetString("ModelHasNotBeenDifferentiated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model is not stochastic, but a stochastic directive was used ähnelt.
        /// </summary>
        internal static string ModelIsNotStochasticButStochasticDirectiveWasUsed {
            get {
                return ResourceManager.GetString("ModelIsNotStochasticButStochasticDirectiveWasUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model is stochastic, but a non-stochastic directive was used ähnelt.
        /// </summary>
        internal static string ModelIsStochasticButNonStochasticDirectiveWasUsed {
            get {
                return ResourceManager.GetString("ModelIsStochasticButNonStochasticDirectiveWasUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The model is not convex. ähnelt.
        /// </summary>
        internal static string ModelNotConvex {
            get {
                return ResourceManager.GetString("ModelNotConvex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model is not solved yet. Cannot retrieve decisions&apos; values ähnelt.
        /// </summary>
        internal static string ModelNotSolved {
            get {
                return ResourceManager.GetString("ModelNotSolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model reduction: {0} unbounded rows removed, {1} constant or unbounded slack variables removed ähnelt.
        /// </summary>
        internal static string ModelReduction0UnboundedRowsRemoved1ConstantOrUnboundedSlackVariablesRemoved {
            get {
                return ResourceManager.GetString("ModelReduction0UnboundedRowsRemoved1ConstantOrUnboundedSlackVariablesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Models cannot be shared across SolverContext instances. Please use the SolverContext instance that created the Model. ähnelt.
        /// </summary>
        internal static string ModelsCannotBeSharedAcrossSolverContextInstances {
            get {
                return ResourceManager.GetString("ModelsCannotBeSharedAcrossSolverContextInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model should contain at least one &apos;Decisions&apos; section ähnelt.
        /// </summary>
        internal static string ModelShouldContainAtLeastOneDecisionsSection {
            get {
                return ResourceManager.GetString("ModelShouldContainAtLeastOneDecisionsSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model should not be edited while enumerating rows or variables. ähnelt.
        /// </summary>
        internal static string ModelShouldNotBeEditedWhileEnumeratingRowsOrVariables {
            get {
                return ResourceManager.GetString("ModelShouldNotBeEditedWhileEnumeratingRowsOrVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model should start with \&quot;Model[\&quot; and end with \&quot;]\&quot; symbol ähnelt.
        /// </summary>
        internal static string ModelShouldStartWithModelAndEndWithSymbol {
            get {
                return ResourceManager.GetString("ModelShouldStartWithModelAndEndWithSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model size limit has been exceeded for this version of the product. Please contact Microsoft Corporation for licensing options. ähnelt.
        /// </summary>
        internal static string ModelSizeLimitHasBeenExceed {
            get {
                return ResourceManager.GetString("ModelSizeLimitHasBeenExceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Given model is too large and cannot be handled ähnelt.
        /// </summary>
        internal static string ModelTooLarge {
            get {
                return ResourceManager.GetString("ModelTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mps expects a string (the file name), optionally followed by a boolean (True for fixed format, False for free). ähnelt.
        /// </summary>
        internal static string MpsExpectsAStringTheFileNameOptionallyFollowedByABooleanTrueForFixedFormatFalseForFree {
            get {
                return ResourceManager.GetString("MpsExpectsAStringTheFileNameOptionallyFollowedByABooleanTrueForFixedFormatFalseFo" +
                        "rFree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}ms
        /// ähnelt.
        /// </summary>
        internal static string Ms {
            get {
                return ResourceManager.GetString("Ms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multicorrector: ineffective ähnelt.
        /// </summary>
        internal static string MulticorrectorIneffective {
            get {
                return ResourceManager.GetString("MulticorrectorIneffective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die multiple occurrence of a symbol in SymbolSet ähnelt.
        /// </summary>
        internal static string MultipleOccurrenceOfASymbolInSymbolSet {
            get {
                return ResourceManager.GetString("MultipleOccurrenceOfASymbolInSymbolSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must apply to a single argument ähnelt.
        /// </summary>
        internal static string MustApplyToASingleArgument {
            get {
                return ResourceManager.GetString("MustApplyToASingleArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must apply to two arguments ähnelt.
        /// </summary>
        internal static string MustApplyToTwoArguments {
            get {
                return ResourceManager.GetString("MustApplyToTwoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must be a list of integer values ähnelt.
        /// </summary>
        internal static string MustBeAListOfIntegerValues {
            get {
                return ResourceManager.GetString("MustBeAListOfIntegerValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must be a tuple of integer values that are within Finite Solver&apos;s integer range ähnelt.
        /// </summary>
        internal static string MustBeATupleOfIntegerValuesThatAreWithinFiniteSolverSIntegerRange {
            get {
                return ResourceManager.GetString("MustBeATupleOfIntegerValuesThatAreWithinFiniteSolverSIntegerRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must have a single value. ähnelt.
        /// </summary>
        internal static string MustHaveASingleValue {
            get {
                return ResourceManager.GetString("MustHaveASingleValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must have at least one element ähnelt.
        /// </summary>
        internal static string MustHaveAtLeastOneElement {
            get {
                return ResourceManager.GetString("MustHaveAtLeastOneElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must have at least one value ähnelt.
        /// </summary>
        internal static string MustHaveAtLeastOneValue {
            get {
                return ResourceManager.GetString("MustHaveAtLeastOneValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name found in Model was not presented as a Decision ähnelt.
        /// </summary>
        internal static string NameFoundInModelWasNotPresentedAsAVariable {
            get {
                return ResourceManager.GetString("NameFoundInModelWasNotPresentedAsAVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name is already used as a domain ähnelt.
        /// </summary>
        internal static string NameIsAlreadyUsedAsADomain {
            get {
                return ResourceManager.GetString("NameIsAlreadyUsedAsADomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a simplex solver. ähnelt.
        /// </summary>
        internal static string NeedsASimplexSolver {
            get {
                return ResourceManager.GetString("NeedsASimplexSolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a simplex solver, followed by any number of rules mapping {row, var} to value. ähnelt.
        /// </summary>
        internal static string NeedsASimplexSolverFollowedByAnyNumberOfRulesMappingRowVarToValue {
            get {
                return ResourceManager.GetString("NeedsASimplexSolverFollowedByAnyNumberOfRulesMappingRowVarToValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a simplex solver, followed by any number of rules mapping variables/labels to values. ähnelt.
        /// </summary>
        internal static string NeedsASimplexSolverFollowedByAnyNumberOfRulesMappingVariablesLabelsToValues {
            get {
                return ResourceManager.GetString("NeedsASimplexSolverFollowedByAnyNumberOfRulesMappingVariablesLabelsToValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a simplex solver, optionally followed by {label, var} pairs. ähnelt.
        /// </summary>
        internal static string NeedsASimplexSolverOptionallyFollowedByLabelVarPairs {
            get {
                return ResourceManager.GetString("NeedsASimplexSolverOptionallyFollowedByLabelVarPairs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a simplex solver, optionally followed by statistic names. ähnelt.
        /// </summary>
        internal static string NeedsASimplexSolverOptionallyFollowedByStatisticNames {
            get {
                return ResourceManager.GetString("NeedsASimplexSolverOptionallyFollowedByStatisticNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a simplex solver, optionally followed by variables/labels. ähnelt.
        /// </summary>
        internal static string NeedsASimplexSolverOptionallyFollowedByVariablesLabels {
            get {
                return ResourceManager.GetString("NeedsASimplexSolverOptionallyFollowedByVariablesLabels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs a solver with sensitivity information. ähnelt.
        /// </summary>
        internal static string NeedsASolverWithSensitivityInformation {
            get {
                return ResourceManager.GetString("NeedsASolverWithSensitivityInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} needs at least 2 arguments ähnelt.
        /// </summary>
        internal static string NeedsAtLeast2Arguments {
            get {
                return ResourceManager.GetString("NeedsAtLeast2Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die needs to use dual for sensitivity report ähnelt.
        /// </summary>
        internal static string NeedsToUseDualForSensitivityRepor {
            get {
                return ResourceManager.GetString("NeedsToUseDualForSensitivityRepor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Negation should have 1 argument ähnelt.
        /// </summary>
        internal static string NegationShouldHave1Argument {
            get {
                return ResourceManager.GetString("NegationShouldHave1Argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Negative index in {0}[{1}] ähnelt.
        /// </summary>
        internal static string NegativeIndex01 {
            get {
                return ResourceManager.GetString("NegativeIndex01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot take negative power in ConstraintSolver.Power ähnelt.
        /// </summary>
        internal static string NegativePower {
            get {
                return ResourceManager.GetString("NegativePower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NelderMeadSolver requires the FunctionEvaluator property to be specified before calling solve. ähnelt.
        /// </summary>
        internal static string NmSolverRequiresEvaluatorToBeSpecifiedBeforeCallingSolve {
            get {
                return ResourceManager.GetString("NmSolverRequiresEvaluatorToBeSpecifiedBeforeCallingSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no arithmetic object for this number type  ähnelt.
        /// </summary>
        internal static string NoArithmeticObjectForType {
            get {
                return ResourceManager.GetString("NoArithmeticObjectForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The model cannot be changed before Solve completes  ähnelt.
        /// </summary>
        internal static string NoChangesBeforeSolveComplete {
            get {
                return ResourceManager.GetString("NoChangesBeforeSolveComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No cone type specified. ähnelt.
        /// </summary>
        internal static string NoConeTypeSpecified {
            get {
                return ResourceManager.GetString("NoConeTypeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No data binding set on {0} ähnelt.
        /// </summary>
        internal static string NoDataBindingSetOn0 {
            get {
                return ResourceManager.GetString("NoDataBindingSetOn0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No derivative exists in row {0} for variable {1}. ähnelt.
        /// </summary>
        internal static string NoDerivativeExists01 {
            get {
                return ResourceManager.GetString("NoDerivativeExists01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0,-10} nodes searched in {1}ms ähnelt.
        /// </summary>
        internal static string NodesSearchedIn1Ms {
            get {
                return ResourceManager.GetString("NodesSearchedIn1Ms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Domain.ValueKind specified ähnelt.
        /// </summary>
        internal static string NoDomainValueKindSpecified {
            get {
                return ResourceManager.GetString("NoDomainValueKindSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die none ähnelt.
        /// </summary>
        internal static string NoExpiration {
            get {
                return ResourceManager.GetString("NoExpiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A constraint must be Boolean  ähnelt.
        /// </summary>
        internal static string NonBooleanConstraints {
            get {
                return ResourceManager.GetString("NonBooleanConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-boolean expression attempted as constraint ähnelt.
        /// </summary>
        internal static string NonBooleanExpressionAttemptedAsConstraint {
            get {
                return ResourceManager.GetString("NonBooleanExpressionAttemptedAsConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-Boolean term appears where a Boolean term is expected ähnelt.
        /// </summary>
        internal static string NonBooleanInputs {
            get {
                return ResourceManager.GetString("NonBooleanInputs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Non-boolean variable attempted as constraint ähnelt.
        /// </summary>
        internal static string NonBooleanVariableAttemptedAsConstraint {
            get {
                return ResourceManager.GetString("NonBooleanVariableAttemptedAsConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The field method is only valid for composite variables  ähnelt.
        /// </summary>
        internal static string NonCompositeFieldAccess {
            get {
                return ResourceManager.GetString("NonCompositeFieldAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None of the supplied directives was valid for the model ähnelt.
        /// </summary>
        internal static string NoneOfTheSuppliedDirectivesWasValidForTheModel {
            get {
                return ResourceManager.GetString("NoneOfTheSuppliedDirectivesWasValidForTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add new fields to CspPowerSet or CspPowerList composite ähnelt.
        /// </summary>
        internal static string NoNewFieldsForSetListComposites {
            get {
                return ResourceManager.GetString("NoNewFieldsForSetListComposites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die non-integer domains in CSP problem is not yet supported in OML ähnelt.
        /// </summary>
        internal static string NonIntegerDomainsInCSPProblemIsNotYetSupportedInOML {
            get {
                return ResourceManager.GetString("NonIntegerDomainsInCSPProblemIsNotYetSupportedInOML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nonlinear term ähnelt.
        /// </summary>
        internal static string NonlinearTerm {
            get {
                return ResourceManager.GetString("NonlinearTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nonlinear value ähnelt.
        /// </summary>
        internal static string NonlinearValue {
            get {
                return ResourceManager.GetString("NonlinearValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die no report type ähnelt.
        /// </summary>
        internal static string NoReportType {
            get {
                return ResourceManager.GetString("NoReportType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No solver could be found that can accept the model given the model type and directive(s) ähnelt.
        /// </summary>
        internal static string NoSolverFound {
            get {
                return ResourceManager.GetString("NoSolverFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No solver found a solution within the time limit. ähnelt.
        /// </summary>
        internal static string NoSolverFoundASolutionWithinTheTimeLimit {
            get {
                return ResourceManager.GetString("NoSolverFoundASolutionWithinTheTimeLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {1} cannot solve {0} models. Remove this directive and use a directive that supports the {0} capability. ähnelt.
        /// </summary>
        internal static string NoSolverWithCapabilityForDirectiveWithType01 {
            get {
                return ResourceManager.GetString("NoSolverWithCapabilityForDirectiveWithType01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No such set ähnelt.
        /// </summary>
        internal static string NoSuchSet {
            get {
                return ResourceManager.GetString("NoSuchSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not a linear operation ähnelt.
        /// </summary>
        internal static string NotALinearOperation {
            get {
                return ResourceManager.GetString("NotALinearOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not a row ähnelt.
        /// </summary>
        internal static string NotARow {
            get {
                return ResourceManager.GetString("NotARow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot convert the Term to Boolean Term  ähnelt.
        /// </summary>
        internal static string NotBoolean {
            get {
                return ResourceManager.GetString("NotBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The model is not a LP/MILP/QP model. Make sure the model does not contain any nonlinear constraints or strict inequalities, or use a directive that supports this model type. ähnelt.
        /// </summary>
        internal static string NotLpMilpQpModel {
            get {
                return ResourceManager.GetString("NotLpMilpQpModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not supported random type ähnelt.
        /// </summary>
        internal static string NotSupportedRandomType {
            get {
                return ResourceManager.GetString("NotSupportedRandomType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not triangular ähnelt.
        /// </summary>
        internal static string NotTriangular {
            get {
                return ResourceManager.GetString("NotTriangular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not valid index (bigger than number of {0}) in {1}[{2}] ähnelt.
        /// </summary>
        internal static string NotValidIndex012 {
            get {
                return ResourceManager.GetString("NotValidIndex012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not yet implemented ähnelt.
        /// </summary>
        internal static string NotYetImplemented {
            get {
                return ResourceManager.GetString("NotYetImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No vid for the decision {0} ähnelt.
        /// </summary>
        internal static string NoVidForTheDecision0 {
            get {
                return ResourceManager.GetString("NoVidForTheDecision0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No vid for the goal {0} ähnelt.
        /// </summary>
        internal static string NoVidForTheGoal0 {
            get {
                return ResourceManager.GetString("NoVidForTheGoal0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add null constraints. ähnelt.
        /// </summary>
        internal static string NullConstraints {
            get {
                return ResourceManager.GetString("NullConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The domain for a decision cannot be null. ähnelt.
        /// </summary>
        internal static string NullDomain {
            get {
                return ResourceManager.GetString("NullDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add null goals. ähnelt.
        /// </summary>
        internal static string NullGoals {
            get {
                return ResourceManager.GetString("NullGoals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input cannot be null  ähnelt.
        /// </summary>
        internal static string NullInput {
            get {
                return ResourceManager.GetString("NullInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number not integer, or out of range ähnelt.
        /// </summary>
        internal static string NumberNotIntegerOrOutOfRange {
            get {
                return ResourceManager.GetString("NumberNotIntegerOrOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of elements in tuple does not match ähnelt.
        /// </summary>
        internal static string NumberOfElementsInTupleDoesNotMatch {
            get {
                return ResourceManager.GetString("NumberOfElementsInTupleDoesNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of evaluation calls: {0} ähnelt.
        /// </summary>
        internal static string NumberOfEvaluationCalls0 {
            get {
                return ResourceManager.GetString("NumberOfEvaluationCalls0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of iterations performed: {0} ähnelt.
        /// </summary>
        internal static string NumberOfIterationsPerformed0 {
            get {
                return ResourceManager.GetString("NumberOfIterationsPerformed0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of iterations to remember should be positive ähnelt.
        /// </summary>
        internal static string NumberOfIterationsToRememberShouldBePositive {
            get {
                return ResourceManager.GetString("NumberOfIterationsToRememberShouldBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of parameters for Decision is wrong ähnelt.
        /// </summary>
        internal static string NumberOfParametersForDecisionIsWrong {
            get {
                return ResourceManager.GetString("NumberOfParametersForDecisionIsWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of parameters for Decision &apos;{0}&apos; is wrong ähnelt.
        /// </summary>
        internal static string NumberOfParametersForDecisionIsWrong0 {
            get {
                return ResourceManager.GetString("NumberOfParametersForDecisionIsWrong0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of variables should be positive ähnelt.
        /// </summary>
        internal static string NumberOfVariablesShouldBePositive {
            get {
                return ResourceManager.GetString("NumberOfVariablesShouldBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Objective label already exists. ähnelt.
        /// </summary>
        internal static string ObjectiveLabelAlreadyExists {
            get {
                return ResourceManager.GetString("ObjectiveLabelAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of re-initialization: {0} ähnelt.
        /// </summary>
        internal static string OfReInitialization0 {
            get {
                return ResourceManager.GetString("OfReInitialization0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of re-initialization due to cuts: {0} ähnelt.
        /// </summary>
        internal static string OfReInitializationDueToCuts0 {
            get {
                return ResourceManager.GetString("OfReInitializationDueToCuts0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of re-initialization due to nodes: {0} ähnelt.
        /// </summary>
        internal static string OfReInitializationDueToNodes0 {
            get {
                return ResourceManager.GetString("OfReInitializationDueToNodes0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decision ähnelt.
        /// </summary>
        internal static string OmlDecision {
            get {
                return ResourceManager.GetString("OmlDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decisions can not be assigned ähnelt.
        /// </summary>
        internal static string OmlInvalidAssignedDecision {
            get {
                return ResourceManager.GetString("OmlInvalidAssignedDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set parameters cannot be assigned values. ähnelt.
        /// </summary>
        internal static string OmlInvalidAssignmentToSetsParameter {
            get {
                return ResourceManager.GetString("OmlInvalidAssignmentToSetsParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operator &apos;{0}&apos; is not supported in OML. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadBuiltinOperator {
            get {
                return ResourceManager.GetString("OmlInvalidBadBuiltinOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The domain &apos;{0}&apos; is not recognized. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadDomain {
            get {
                return ResourceManager.GetString("OmlInvalidBadDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid domain format. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadDomainBounds {
            get {
                return ResourceManager.GetString("OmlInvalidBadDomainBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bound is not of the correct type. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadDomainBoundType {
            get {
                return ResourceManager.GetString("OmlInvalidBadDomainBoundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bound &apos;{0}&apos; is not of the correct type. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadDomainBoundType0 {
            get {
                return ResourceManager.GetString("OmlInvalidBadDomainBoundType0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expression &apos;{0}&apos; is not recognized as a value or builtin operator. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadExpr {
            get {
                return ResourceManager.GetString("OmlInvalidBadExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrect iterator format for &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadIterator {
            get {
                return ResourceManager.GetString("OmlInvalidBadIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid use of &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadSetSpecifier {
            get {
                return ResourceManager.GetString("OmlInvalidBadSetSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected a Tuple here. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadTuple {
            get {
                return ResourceManager.GetString("OmlInvalidBadTuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected a Tuple here. &apos;{0}&apos; is not a Tuple. ähnelt.
        /// </summary>
        internal static string OmlInvalidBadTuple0 {
            get {
                return ResourceManager.GetString("OmlInvalidBadTuple0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Builtin symbol &apos;{0}&apos; cannot be used as an iterator. ähnelt.
        /// </summary>
        internal static string OmlInvalidBuiltinUsedAsIterator {
            get {
                return ResourceManager.GetString("OmlInvalidBuiltinUsedAsIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only Boolean values are allowed as constraints. ähnelt.
        /// </summary>
        internal static string OmlInvalidConstraintNotBoolean {
            get {
                return ResourceManager.GetString("OmlInvalidConstraintNotBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; Constraint is wrong. Only Boolean values are allowed as constraints. ähnelt.
        /// </summary>
        internal static string OmlInvalidConstraintNotBoolean0 {
            get {
                return ResourceManager.GetString("OmlInvalidConstraintNotBoolean0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bounds may not depend on decision values. ähnelt.
        /// </summary>
        internal static string OmlInvalidDecisionInDomainBound {
            get {
                return ResourceManager.GetString("OmlInvalidDecisionInDomainBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bound &apos;{0}&apos; may not depend on decision values. ähnelt.
        /// </summary>
        internal static string OmlInvalidDecisionInDomainBound0 {
            get {
                return ResourceManager.GetString("OmlInvalidDecisionInDomainBound0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A condition for &apos;{0}&apos; may not be dependent on decision values. ähnelt.
        /// </summary>
        internal static string OmlInvalidDecisionInFilter {
            get {
                return ResourceManager.GetString("OmlInvalidDecisionInFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values used in an iterator cannot depend on decision values. ähnelt.
        /// </summary>
        internal static string OmlInvalidDecisionInIteratorList {
            get {
                return ResourceManager.GetString("OmlInvalidDecisionInIteratorList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value &apos;{0}&apos; is used in an iterator. Values used in an iterator cannot depend on decision values. ähnelt.
        /// </summary>
        internal static string OmlInvalidDecisionInIteratorList0 {
            get {
                return ResourceManager.GetString("OmlInvalidDecisionInIteratorList0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index for &apos;{0}&apos; may not be used without indexing. ähnelt.
        /// </summary>
        internal static string OmlInvalidDeclaredIndexIsTable {
            get {
                return ResourceManager.GetString("OmlInvalidDeclaredIndexIsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index for &apos;{0}&apos; may not depend on a parameter value. ähnelt.
        /// </summary>
        internal static string OmlInvalidDeclaredIndexUsesData {
            get {
                return ResourceManager.GetString("OmlInvalidDeclaredIndexUsesData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index for &apos;{0}&apos; may not depend on a decision value. ähnelt.
        /// </summary>
        internal static string OmlInvalidDeclaredIndexUsesDecision {
            get {
                return ResourceManager.GetString("OmlInvalidDeclaredIndexUsesDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index for &apos;{0}&apos; must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidDeclaredIndexUsesForeach {
            get {
                return ResourceManager.GetString("OmlInvalidDeclaredIndexUsesForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Builtin symbol &apos;{0}&apos; cannot be redefined. ähnelt.
        /// </summary>
        internal static string OmlInvalidDefiningBuiltin {
            get {
                return ResourceManager.GetString("OmlInvalidDefiningBuiltin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Builtin symbol &apos;{0}&apos; cannot be used as a set. ähnelt.
        /// </summary>
        internal static string OmlInvalidDefiningBuiltinAsSet {
            get {
                return ResourceManager.GetString("OmlInvalidDefiningBuiltinAsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol {0} has been defined. Cannot redefine it in the current Model[] section. ähnelt.
        /// </summary>
        internal static string OmlInvalidDefiningDuplicatedSymbols {
            get {
                return ResourceManager.GetString("OmlInvalidDefiningDuplicatedSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Each list in a Tuples assignment must contain the same number of elements. ähnelt.
        /// </summary>
        internal static string OmlInvalidEachListMustContainSameNumberOfElements {
            get {
                return ResourceManager.GetString("OmlInvalidEachListMustContainSameNumberOfElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operator &apos;{0}&apos; requires at least {1} argument(s). ähnelt.
        /// </summary>
        internal static string OmlInvalidFewerThanNeededArgumentCount01 {
            get {
                return ResourceManager.GetString("OmlInvalidFewerThanNeededArgumentCount01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A condition for &apos;{0}&apos; must be a Boolean value. ähnelt.
        /// </summary>
        internal static string OmlInvalidFilterIsNotBoolean {
            get {
                return ResourceManager.GetString("OmlInvalidFilterIsNotBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bound must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidForeachInDomainBound {
            get {
                return ResourceManager.GetString("OmlInvalidForeachInDomainBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bound &apos;{0}&apos; must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidForeachInDomainBound0 {
            get {
                return ResourceManager.GetString("OmlInvalidForeachInDomainBound0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A condition for &apos;{0}&apos; must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidForeachInFilter {
            get {
                return ResourceManager.GetString("OmlInvalidForeachInFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values used as iterator bounds must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidForeachInIterator {
            get {
                return ResourceManager.GetString("OmlInvalidForeachInIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not allowed in a Parameters section ähnelt.
        /// </summary>
        internal static string OmlInvalidForeachInParameter {
            get {
                return ResourceManager.GetString("OmlInvalidForeachInParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operator &apos;{0}&apos; only accepts singled-value arguments. ähnelt.
        /// </summary>
        internal static string OmlInvalidForeachNotAllowedInOperator {
            get {
                return ResourceManager.GetString("OmlInvalidForeachNotAllowedInOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only numeric values are allowed as goals. ähnelt.
        /// </summary>
        internal static string OmlInvalidGoalNotNumeric {
            get {
                return ResourceManager.GetString("OmlInvalidGoalNotNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; Goal is wrong. Only numeric values are allowed as goals. ähnelt.
        /// </summary>
        internal static string OmlInvalidGoalNotNumeric0 {
            get {
                return ResourceManager.GetString("OmlInvalidGoalNotNumeric0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operator &apos;{0}&apos; must have all arguments of the same type. ähnelt.
        /// </summary>
        internal static string OmlInvalidIncompatibleArgument {
            get {
                return ResourceManager.GetString("OmlInvalidIncompatibleArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arguments for indexed random parameters must be specified through data binding. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexedRandomParameters {
            get {
                return ResourceManager.GetString("OmlInvalidIndexedRandomParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set parameters cannot be indexed. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexedSetsParameter {
            get {
                return ResourceManager.GetString("OmlInvalidIndexedSetsParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value used as index must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexingByForeach {
            get {
                return ResourceManager.GetString("OmlInvalidIndexingByForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value &apos;{0}&apos; is used as index. Value used as index must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexingByForeach0 {
            get {
                return ResourceManager.GetString("OmlInvalidIndexingByForeach0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value used as index is not a valid type. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexingByTable {
            get {
                return ResourceManager.GetString("OmlInvalidIndexingByTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value &apos;{0}&apos; is used as index. Value used as index is not a valid type. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexingByTable0 {
            get {
                return ResourceManager.GetString("OmlInvalidIndexingByTable0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value {0} cannot be indexed. ähnelt.
        /// </summary>
        internal static string OmlInvalidIndexOfNonTable0 {
            get {
                return ResourceManager.GetString("OmlInvalidIndexOfNonTable0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid assignment format. ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidAssignmentFormat {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidAssignmentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid element. ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidElement {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; element is invalid. ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidElement0 {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidElement0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sos1 constraint must contain a sum of products ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidSos1 {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidSos1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sos2 must contain a reference constraint. ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidSos2 {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidSos2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sos2 must contain a reference constraint as an equality. ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidSos2NeedEquality {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidSos2NeedEquality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sos2 must contain a reference constraint as an equality with exactly two arguments. ähnelt.
        /// </summary>
        internal static string OmlInvalidInvalidSos2NeedEqualityWithTwoArguments {
            get {
                return ResourceManager.GetString("OmlInvalidInvalidSos2NeedEqualityWithTwoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid label to goal or constraint ähnelt.
        /// </summary>
        internal static string OmlInvalidLabel {
            get {
                return ResourceManager.GetString("OmlInvalidLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only assignment parameters are allowed inside &apos;Foreach&apos; or &apos;ForeachWhere&apos;. ähnelt.
        /// </summary>
        internal static string OmlInvalidNonAssignmentParameterInForeach {
            get {
                return ResourceManager.GetString("OmlInvalidNonAssignmentParameterInForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logical or relational operators only accept Boolean arguments. ähnelt.
        /// </summary>
        internal static string OmlInvalidNonBooleanArgument {
            get {
                return ResourceManager.GetString("OmlInvalidNonBooleanArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arithmetic operators only accept numeric arguments. ähnelt.
        /// </summary>
        internal static string OmlInvalidNonNumericArgument {
            get {
                return ResourceManager.GetString("OmlInvalidNonNumericArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values used as iterator bounds must be numeric. ähnelt.
        /// </summary>
        internal static string OmlInvalidNonNumericInIterator {
            get {
                return ResourceManager.GetString("OmlInvalidNonNumericInIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bounds may not depend on late-bound data. ähnelt.
        /// </summary>
        internal static string OmlInvalidParameterInDomainBound {
            get {
                return ResourceManager.GetString("OmlInvalidParameterInDomainBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain bound &apos;{0}&apos; may not depend on late-bound data. ähnelt.
        /// </summary>
        internal static string OmlInvalidParameterInDomainBound0 {
            get {
                return ResourceManager.GetString("OmlInvalidParameterInDomainBound0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;{0}&apos; must be either assigned a value (&apos;=&apos;) or indexed(&apos;[]&apos;). ähnelt.
        /// </summary>
        internal static string OmlInvalidParameterNotAssignmentOrIndex0 {
            get {
                return ResourceManager.GetString("OmlInvalidParameterNotAssignmentOrIndex0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid recourse decision name. ähnelt.
        /// </summary>
        internal static string OmlInvalidRecourseDecision {
            get {
                return ResourceManager.GetString("OmlInvalidRecourseDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The symbol &apos;{0}&apos; is already used as an iterator in an enclosing scope. ähnelt.
        /// </summary>
        internal static string OmlInvalidRedefiningIterator {
            get {
                return ResourceManager.GetString("OmlInvalidRedefiningIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Parameters sections should start with a domain and all Decisions sections should start with a domain or a submodel. ähnelt.
        /// </summary>
        internal static string OmlInvalidSectionShouldStartWithDomain {
            get {
                return ResourceManager.GetString("OmlInvalidSectionShouldStartWithDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not a domain nor a submodel. All Parameters sections should start with a domain and all Decisions sections should start with a domain or a submodel. ähnelt.
        /// </summary>
        internal static string OmlInvalidSectionShouldStartWithDomain0 {
            get {
                return ResourceManager.GetString("OmlInvalidSectionShouldStartWithDomain0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not allowed outside the Parameters section. ähnelt.
        /// </summary>
        internal static string OmlInvalidSetsOutsideParametersSection {
            get {
                return ResourceManager.GetString("OmlInvalidSetsOutsideParametersSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expression was too large to validate. ähnelt.
        /// </summary>
        internal static string OmlInvalidStackOverflow {
            get {
                return ResourceManager.GetString("OmlInvalidStackOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel must be of the form: name -&gt; Model[...], where name is a single non-quoted symbol ähnelt.
        /// </summary>
        internal static string OmlInvalidSubmodelClause {
            get {
                return ResourceManager.GetString("OmlInvalidSubmodelClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel, goal and constraint names cannot be a predefined symbol. ähnelt.
        /// </summary>
        internal static string OmlInvalidSubmodelGoalConstraintName {
            get {
                return ResourceManager.GetString("OmlInvalidSubmodelGoalConstraintName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown or duplicated submodel instance symbol ähnelt.
        /// </summary>
        internal static string OmlInvalidSubmodelInstanceSymbolUnknownOrDuplicated {
            get {
                return ResourceManager.GetString("OmlInvalidSubmodelInstanceSymbolUnknownOrDuplicated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel name has been taken ähnelt.
        /// </summary>
        internal static string OmlInvalidSubmodelNameHasBeenTaken {
            get {
                return ResourceManager.GetString("OmlInvalidSubmodelNameHasBeenTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel name is also declared as a named domain ähnelt.
        /// </summary>
        internal static string OmlInvalidSubmodelNameIsAlsoDeclaredAsANamedDomain {
            get {
                return ResourceManager.GetString("OmlInvalidSubmodelNameIsAlsoDeclaredAsANamedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The symbol &apos;{0}&apos; is already used as a decision or parameter. ähnelt.
        /// </summary>
        internal static string OmlInvalidSymbolRedefined {
            get {
                return ResourceManager.GetString("OmlInvalidSymbolRedefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The symbol &apos;{0}&apos; is already used as a set. ähnelt.
        /// </summary>
        internal static string OmlInvalidSymbolRedefinedAsSet {
            get {
                return ResourceManager.GetString("OmlInvalidSymbolRedefinedAsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operator &apos;{0}&apos; cannot accept the term without indexing. ähnelt.
        /// </summary>
        internal static string OmlInvalidTableArgument {
            get {
                return ResourceManager.GetString("OmlInvalidTableArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This term cannot be used in an iterator without indexing. ähnelt.
        /// </summary>
        internal static string OmlInvalidTableInIteratorList {
            get {
                return ResourceManager.GetString("OmlInvalidTableInIteratorList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The term &apos;{0}&apos; cannot be used in an iterator without indexing. ähnelt.
        /// </summary>
        internal static string OmlInvalidTableInIteratorList0 {
            get {
                return ResourceManager.GetString("OmlInvalidTableInIteratorList0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple element may not depend on a decision value. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleContainsDecision {
            get {
                return ResourceManager.GetString("OmlInvalidTupleContainsDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple element &apos;{0}&apos; may not depend on a decision value. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleContainsDecision0 {
            get {
                return ResourceManager.GetString("OmlInvalidTupleContainsDecision0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple element must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleElementContainsForeach {
            get {
                return ResourceManager.GetString("OmlInvalidTupleElementContainsForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple element &apos;{0}&apos; must be single-valued. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleElementContainsForeach0 {
            get {
                return ResourceManager.GetString("OmlInvalidTupleElementContainsForeach0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple element is not numeric. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleElementNotNumber {
            get {
                return ResourceManager.GetString("OmlInvalidTupleElementNotNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple element &apos;{0}&apos; is not numeric. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleElementNotNumber0 {
            get {
                return ResourceManager.GetString("OmlInvalidTupleElementNotNumber0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For a Tuple to appear outside a table constraint, the first column must be of type Probability. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleOutsideTableConstraint {
            get {
                return ResourceManager.GetString("OmlInvalidTupleOutsideTableConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples can only be assigned to a list of lists. ähnelt.
        /// </summary>
        internal static string OmlInvalidTuplesCanOnlyBeAssignedToListOfLists {
            get {
                return ResourceManager.GetString("OmlInvalidTuplesCanOnlyBeAssignedToListOfLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected a Tuple with {0} arguments. ähnelt.
        /// </summary>
        internal static string OmlInvalidTupleWrongArity {
            get {
                return ResourceManager.GetString("OmlInvalidTupleWrongArity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operator &apos;{0}&apos; requires exactly {1} argument(s). ähnelt.
        /// </summary>
        internal static string OmlInvalidWrongArgumentCount {
            get {
                return ResourceManager.GetString("OmlInvalidWrongArgumentCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value assigned to &apos;{0}&apos; has the wrong type. ähnelt.
        /// </summary>
        internal static string OmlInvalidWrongTypeInAssignment {
            get {
                return ResourceManager.GetString("OmlInvalidWrongTypeInAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter ähnelt.
        /// </summary>
        internal static string OmlParameter {
            get {
                return ResourceManager.GetString("OmlParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;{0}, {1}&gt; - &lt;{2}, {3}&gt; ähnelt.
        /// </summary>
        internal static string OmlParseExceptionLocationFormat0123 {
            get {
                return ResourceManager.GetString("OmlParseExceptionLocationFormat0123", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recourse sections must contain exactly one decision ähnelt.
        /// </summary>
        internal static string OmlRecourseMustContainAtLeastOneDecision {
            get {
                return ResourceManager.GetString("OmlRecourseMustContainAtLeastOneDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; symbol has been used for a decision and cannot be used for a parameter. ähnelt.
        /// </summary>
        internal static string OmlSymbolUsedForDecision0 {
            get {
                return ResourceManager.GetString("OmlSymbolUsedForDecision0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; symbol has been used for different type of {1}. ähnelt.
        /// </summary>
        internal static string OmlSymbolUsedForDifferentType01 {
            get {
                return ResourceManager.GetString("OmlSymbolUsedForDifferentType01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; symbol has been used for a parameter and cannot be used for a decision. ähnelt.
        /// </summary>
        internal static string OmlSymbolUsedForParameter0 {
            get {
                return ResourceManager.GetString("OmlSymbolUsedForParameter0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One, and one only address allowed ähnelt.
        /// </summary>
        internal static string OneOnlyAddressAllowed {
            get {
                return ResourceManager.GetString("OneOnlyAddressAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more solvers were not aborted within the wait limit specified in the directive. If this problem persists, increase Directive.WaitLimit. ähnelt.
        /// </summary>
        internal static string OneOrMoreSolversWereNotAbortedWithinWaitLimitSpecified {
            get {
                return ResourceManager.GetString("OneOrMoreSolversWereNotAbortedWithinWaitLimitSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} only applies to a List ähnelt.
        /// </summary>
        internal static string OnlyAppliesToAList {
            get {
                return ResourceManager.GetString("OnlyAppliesToAList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only bind data clauses allowed in Input section ähnelt.
        /// </summary>
        internal static string OnlyBinddataClausesAllowed {
            get {
                return ResourceManager.GetString("OnlyBinddataClausesAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only constant values are allowed for the iteration set in Foreach/FilteredForeach ähnelt.
        /// </summary>
        internal static string OnlyConstantValuesAreAllowedForTheIterationSetInForeachFilteredForeach {
            get {
                return ResourceManager.GetString("OnlyConstantValuesAreAllowedForTheIterationSetInForeachFilteredForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only enumerated domains can be bound to string values. ähnelt.
        /// </summary>
        internal static string OnlyEnumeratedDomainsSupportStringBinding {
            get {
                return ResourceManager.GetString("OnlyEnumeratedDomainsSupportStringBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only integer and enum decisions may be probed ähnelt.
        /// </summary>
        internal static string OnlyIntegerAndEnumDecisionsMayBeProbed {
            get {
                return ResourceManager.GetString("OnlyIntegerAndEnumDecisionsMayBeProbed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only interval domains are allowed for simplex ähnelt.
        /// </summary>
        internal static string OnlyIntervalDomainsAreAllowedForSimplex {
            get {
                return ResourceManager.GetString("OnlyIntervalDomainsAreAllowedForSimplex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only numeric decisions can be indexed. ähnelt.
        /// </summary>
        internal static string OnlyNumericDecisionsCanBeIndexed {
            get {
                return ResourceManager.GetString("OnlyNumericDecisionsCanBeIndexed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only numeric parameters can be indexed. ähnelt.
        /// </summary>
        internal static string OnlyNumericParametersCanBeIndexed {
            get {
                return ResourceManager.GetString("OnlyNumericParametersCanBeIndexed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only one domain can be specify for Sets section ähnelt.
        /// </summary>
        internal static string OnlyOneDomainForSetsSection {
            get {
                return ResourceManager.GetString("OnlyOneDomainForSetsSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only one goal is supported with Compact Quasi Newton solver. ähnelt.
        /// </summary>
        internal static string OnlyOneGoalIsSupportedWithCQNSolver {
            get {
                return ResourceManager.GetString("OnlyOneGoalIsSupportedWithCQNSolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can not have more that one Input section ähnelt.
        /// </summary>
        internal static string OnlyOneInputsection {
            get {
                return ResourceManager.GetString("OnlyOneInputsection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only one row is supported for Compact Quasi Newton model. ähnelt.
        /// </summary>
        internal static string OnlyOneRowIsSupportedForCQNModel {
            get {
                return ResourceManager.GetString("OnlyOneRowIsSupportedForCQNModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only parameters declared on a Parameters section can be bound ähnelt.
        /// </summary>
        internal static string OnlyParametersDeclaredOnParametersSectionCanBeBound {
            get {
                return ResourceManager.GetString("OnlyParametersDeclaredOnParametersSectionCanBeBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only REPLACE, ADD and MULTIPLY are supported ähnelt.
        /// </summary>
        internal static string OnlyREPLACEADDAndMULTIPLYAreSupported {
            get {
                return ResourceManager.GetString("OnlyREPLACEADDAndMULTIPLYAreSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only two-stage problems are supported ähnelt.
        /// </summary>
        internal static string OnlyTwoStageProblemsAreSupported {
            get {
                return ResourceManager.GetString("OnlyTwoStageProblemsAreSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method is only valid for variables. ähnelt.
        /// </summary>
        internal static string OnlyValidForVariables {
            get {
                return ResourceManager.GetString("OnlyValidForVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method is only valid when called on decisions with {0} indexes. ähnelt.
        /// </summary>
        internal static string OnlyValidWhenCalledOnDecisionsWith0Indexes {
            get {
                return ResourceManager.GetString("OnlyValidWhenCalledOnDecisionsWith0Indexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method is only valid when called on parameters with {0} indexes. ähnelt.
        /// </summary>
        internal static string OnlyValidWhenCalledOnParametersWith0Indexes {
            get {
                return ResourceManager.GetString("OnlyValidWhenCalledOnParametersWith0Indexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only variables, not rows, may be used within a goal row ähnelt.
        /// </summary>
        internal static string OnlyVariablesNotRowsMayBeUsedWithinAGoalRow {
            get {
                return ResourceManager.GetString("OnlyVariablesNotRowsMayBeUsedWithinAGoalRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation is not supported on second order conic rows. ähnelt.
        /// </summary>
        internal static string OperationNotSupportedOnConicRows {
            get {
                return ResourceManager.GetString("OperationNotSupportedOnConicRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operator was not defined ähnelt.
        /// </summary>
        internal static string OperatorNotDefined {
            get {
                return ResourceManager.GetString("OperatorNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die optimal: exit RepeatPivots {0} ähnelt.
        /// </summary>
        internal static string OptimalExitRepeatPivots0 {
            get {
                return ResourceManager.GetString("OptimalExitRepeatPivots0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Or,  ähnelt.
        /// </summary>
        internal static string OrComma {
            get {
                return ResourceManager.GetString("OrComma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output data binding format not supported for {0}: Call to Select not found. ähnelt.
        /// </summary>
        internal static string OutputDataBindingFormatNotSupportedFor0CallToSelectNotFound {
            get {
                return ResourceManager.GetString("OutputDataBindingFormatNotSupportedFor0CallToSelectNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output data binding format not supported for {0}: Property reference not found. ähnelt.
        /// </summary>
        internal static string OutputDataBindingFormatNotSupportedFor0PropertyReferenceNotFound {
            get {
                return ResourceManager.GetString("OutputDataBindingFormatNotSupportedFor0PropertyReferenceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output data binding format not supported for {0}: Unable to call Select on {1} ähnelt.
        /// </summary>
        internal static string OutputDataBindingFormatNotSupportedFor0UnableToCallSelectOn1 {
            get {
                return ResourceManager.GetString("OutputDataBindingFormatNotSupportedFor0UnableToCallSelectOn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output data binding format not supported for {0}: Unrecognized arguments to Select. ähnelt.
        /// </summary>
        internal static string OutputDataBindingFormatNotSupportedFor0UnrecognizedArgumentsToSelect {
            get {
                return ResourceManager.GetString("OutputDataBindingFormatNotSupportedFor0UnrecognizedArgumentsToSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of non-linear models or linear models with strict inequalities are not supported. ähnelt.
        /// </summary>
        internal static string OutputOfNonLinearModelsIsNotSupported {
            get {
                return ResourceManager.GetString("OutputOfNonLinearModelsIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overflow: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string Overflow {
            get {
                return ResourceManager.GetString("Overflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter {0} is not bound to a data source ähnelt.
        /// </summary>
        internal static string Parameter0IsNotBoundToADataSource {
            get {
                return ResourceManager.GetString("Parameter0IsNotBoundToADataSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters cannot be disabled ähnelt.
        /// </summary>
        internal static string ParametersCannotBeDisabled {
            get {
                return ResourceManager.GetString("ParametersCannotBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A parameter may only be assigned a constant within the correct domain and range ähnelt.
        /// </summary>
        internal static string ParameterShouldBeAssignConstantOfItsDomain {
            get {
                return ResourceManager.GetString("ParameterShouldBeAssignConstantOfItsDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter should have indexes ähnelt.
        /// </summary>
        internal static string ParameterShouldHaveIndexes {
            get {
                return ResourceManager.GetString("ParameterShouldHaveIndexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A parameter must use Sets or be assigned a constant value ähnelt.
        /// </summary>
        internal static string ParameterShouldUseSetsOrBeAssignedConstant {
            get {
                return ResourceManager.GetString("ParameterShouldUseSetsOrBeAssignedConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters with non-numeric data are not supported. ähnelt.
        /// </summary>
        internal static string ParametersWithNonNumericDataAreNotSupported {
            get {
                return ResourceManager.GetString("ParametersWithNonNumericDataAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ParsingModelFailed0 {
            get {
                return ResourceManager.GetString("ParsingModelFailed0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected term: &apos;{1}&apos;, &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ParsingModelFailed01 {
            get {
                return ResourceManager.GetString("ParsingModelFailed01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing MPS failed: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ParsingMPSFailed0 {
            get {
                return ResourceManager.GetString("ParsingMPSFailed0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 1 Optimal ähnelt.
        /// </summary>
        internal static string Phase1Optimal {
            get {
                return ResourceManager.GetString("Phase1Optimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please request the Interior Point Method (IPM) solver to handle quadratic objectives. ähnelt.
        /// </summary>
        internal static string PleaseRequestInteriorPointIpmToHandleQuadraticObjectives {
            get {
                return ResourceManager.GetString("PleaseRequestInteriorPointIpmToHandleQuadraticObjectives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accessing a PluginSolverCollection instance that has not been initialized. ähnelt.
        /// </summary>
        internal static string PluginSolverCollectionUninitialized {
            get {
                return ResourceManager.GetString("PluginSolverCollectionUninitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid solver assembly in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidAssembly {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid solver capability in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidCapability {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidCapability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid solver directive class name in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidDirectiveClass {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidDirectiveClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid element in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidElement {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid MsfPluginSolvers section in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidMsfPluginSolversSection {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidMsfPluginSolversSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid solver name in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidName {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid solver parameter class name in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidParameterClass {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidParameterClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid solver class name in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigInvalidSolverClass {
            get {
                return ResourceManager.GetString("PluginSolverConfigInvalidSolverClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Null element in MsfConfig section. ähnelt.
        /// </summary>
        internal static string PluginSolverConfigNullElement {
            get {
                return ResourceManager.GetString("PluginSolverConfigNullElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated solver registration in &lt;MsfPluginSolvers&gt;. The same combination of capability and solverclass can appear in this section at most once ähnelt.
        /// </summary>
        internal static string PluginSolverDuplicatedRegistration {
            get {
                return ResourceManager.GetString("PluginSolverDuplicatedRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft Solver Foundation plugin solver configuration exception. ähnelt.
        /// </summary>
        internal static string PluginSolverError {
            get {
                return ResourceManager.GetString("PluginSolverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugin solvers cannot be hosted in this execution environment. ähnelt.
        /// </summary>
        internal static string PluginSolverHostEnvironmentNotSupported {
            get {
                return ResourceManager.GetString("PluginSolverHostEnvironmentNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver {0} is registered twice with the same capability. ähnelt.
        /// </summary>
        internal static string PluginSolverInconsistentRegistration {
            get {
                return ResourceManager.GetString("PluginSolverInconsistentRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Post-feasibility strategy {0} cannot be used with a model that does not have goals. ähnelt.
        /// </summary>
        internal static string PostFeasibilityStrategy0CannotBeUsedWithAModelThatDoesNotHaveGoals {
            get {
                return ResourceManager.GetString("PostFeasibilityStrategy0CannotBeUsedWithAModelThatDoesNotHaveGoals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power is not constant ähnelt.
        /// </summary>
        internal static string PowerIsNotConstant {
            get {
                return ResourceManager.GetString("PowerIsNotConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power is not integer ähnelt.
        /// </summary>
        internal static string PowerIsNotInteger {
            get {
                return ResourceManager.GetString("PowerIsNotInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power is outside of allowed bounds ähnelt.
        /// </summary>
        internal static string PowerIsOutsideOfAllowedBounds {
            get {
                return ResourceManager.GetString("PowerIsOutsideOfAllowedBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Predictor: loop ={0,-3}, mu {1,8:G5}, gap {2,6:G3} ähnelt.
        /// </summary>
        internal static string PredictorLoopMuGap {
            get {
                return ResourceManager.GetString("PredictorLoopMuGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pre-feasibility strategy {0} cannot be used with a model that does not have goals. ähnelt.
        /// </summary>
        internal static string PreFeasibilityStrategy0CannotBeUsedWithAModelThatDoesNotHaveGoals {
            get {
                return ResourceManager.GetString("PreFeasibilityStrategy0CannotBeUsedWithAModelThatDoesNotHaveGoals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preprocessing... ähnelt.
        /// </summary>
        internal static string Preprocessing {
            get {
                return ResourceManager.GetString("Preprocessing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  done ähnelt.
        /// </summary>
        internal static string PreprocessingDone {
            get {
                return ResourceManager.GetString("PreprocessingDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preprocessing time:      {0}ms ähnelt.
        /// </summary>
        internal static string PreprocessingTime0Ms {
            get {
                return ResourceManager.GetString("PreprocessingTime0Ms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probabilities should sum up to 1 ähnelt.
        /// </summary>
        internal static string ProbabilitiesShouldSumupToOne {
            get {
                return ResourceManager.GetString("ProbabilitiesShouldSumupToOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probability should be more than 0 and less or equal to 1 ähnelt.
        /// </summary>
        internal static string ProbabilityShouldBeMoreThanZeroAndLessOrEqualToOne {
            get {
                return ResourceManager.GetString("ProbabilityShouldBeMoreThanZeroAndLessOrEqualToOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Foreach statements over indexed sets are not allowed in Decision section, use the declaration alone. ähnelt.
        /// </summary>
        internal static string ProhibitedForeachInDecisions {
            get {
                return ResourceManager.GetString("ProhibitedForeachInDecisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Foreach statements over indexed sets are not allowed in Parameters section, use the declaration alone. ähnelt.
        /// </summary>
        internal static string ProhibitedForeachInParameters {
            get {
                return ResourceManager.GetString("ProhibitedForeachInParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property &apos;{0}&apos; can only be accessed by Solving event handlers. ähnelt.
        /// </summary>
        internal static string Property0CanOnlyBeAccessedBySolvingEventHandlers {
            get {
                return ResourceManager.GetString("Property0CanOnlyBeAccessedBySolvingEventHandlers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property name {0} is not supported. ähnelt.
        /// </summary>
        internal static string PropertyNameIsNotSupported0 {
            get {
                return ResourceManager.GetString("PropertyNameIsNotSupported0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property {0} requires a Decision object, but none was supplied. Accessing Decision properties in a Solving event handler is not supported. ähnelt.
        /// </summary>
        internal static string PropertyRequiresADecision0 {
            get {
                return ResourceManager.GetString("PropertyRequiresADecision0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Punctuator &apos;{0}&apos; already mapped! ähnelt.
        /// </summary>
        internal static string PunctuatorAlreadyMapped {
            get {
                return ResourceManager.GetString("PunctuatorAlreadyMapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pure quadratic goal but unknown whether minimizing or maximizing. ähnelt.
        /// </summary>
        internal static string PureQuadraticGoalButUnknownWhetherMinimizeOrMaximize {
            get {
                return ResourceManager.GetString("PureQuadraticGoalButUnknownWhetherMinimizeOrMaximize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quadratic models should not reference non-variables. ähnelt.
        /// </summary>
        internal static string QpModelShouldNotReferenceNonVariables {
            get {
                return ResourceManager.GetString("QpModelShouldNotReferenceNonVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quadratic models only support a single goal row. Can&apos;t change to a different goal row. ähnelt.
        /// </summary>
        internal static string QuadraticModelOnlySupportsASingleGoalRowCanTChangeToADifferentGoalRow {
            get {
                return ResourceManager.GetString("QuadraticModelOnlySupportsASingleGoalRowCanTChangeToADifferentGoalRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The distribution information for this random parameter has already been specified. ähnelt.
        /// </summary>
        internal static string RandomParameterHasAllreadyFilledWithDistributionDetails {
            get {
                return ResourceManager.GetString("RandomParameterHasAllreadyFilledWithDistributionDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Random Seed: {0} ähnelt.
        /// </summary>
        internal static string RandomSeed0 {
            get {
                return ResourceManager.GetString("RandomSeed0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Range of domain should have minimum value and maximum value or not having them both ähnelt.
        /// </summary>
        internal static string RangeOfDomainWrongNumberOfBoundaries {
            get {
                return ResourceManager.GetString("RangeOfDomainWrongNumberOfBoundaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recursion limit exceeded: {0} ähnelt.
        /// </summary>
        internal static string RecursionLimitExceeded {
            get {
                return ResourceManager.GetString("RecursionLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Reducing error ähnelt.
        /// </summary>
        internal static string ReducingError {
            get {
                return ResourceManager.GetString("ReducingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rejected contracted: {0}. ähnelt.
        /// </summary>
        internal static string RejectedContractedCount0 {
            get {
                return ResourceManager.GetString("RejectedContractedCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rejected expanded: {0}. ähnelt.
        /// </summary>
        internal static string RejectedExpandedCount0 {
            get {
                return ResourceManager.GetString("RejectedExpandedCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Removed entering candidate: {1}, {2} ähnelt.
        /// </summary>
        internal static string RemovedEnteringCandidate12 {
            get {
                return ResourceManager.GetString("RemovedEnteringCandidate12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Repaired singular basis ähnelt.
        /// </summary>
        internal static string RepairedSingularBasis {
            get {
                return ResourceManager.GetString("RepairedSingularBasis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replacing {0} with {1} in basis ähnelt.
        /// </summary>
        internal static string Replacing0With1InBasis {
            get {
                return ResourceManager.GetString("Replacing0With1InBasis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capabilities Applied: {0} ähnelt.
        /// </summary>
        internal static string ReportCapability {
            get {
                return ResourceManager.GetString("ReportCapability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ===Solver Foundation Service Report=== ähnelt.
        /// </summary>
        internal static string ReportHeaderReportOverview {
            get {
                return ResourceManager.GetString("ReportHeaderReportOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ===Solution Details=== ähnelt.
        /// </summary>
        internal static string ReportHeaderSolutionDetails {
            get {
                return ResourceManager.GetString("ReportHeaderSolutionDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ===Solver Execution Details=== ähnelt.
        /// </summary>
        internal static string ReportHeaderSolverExecutionDetails {
            get {
                return ResourceManager.GetString("ReportHeaderSolverExecutionDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reporting is only supported for LP, QP, MILP, CP, and UCNLP models. ähnelt.
        /// </summary>
        internal static string ReportingIsOnlySupportedForSimplexIPMAndCSPModels {
            get {
                return ResourceManager.GetString("ReportingIsOnlySupportedForSimplexIPMAndCSPModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reporting not implemented for SolverKind {0} ähnelt.
        /// </summary>
        internal static string ReportingNotImplementedForSolverKind0 {
            get {
                return ResourceManager.GetString("ReportingNotImplementedForSolverKind0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Algorithm: {0} ähnelt.
        /// </summary>
        internal static string ReportLineAlgorithm {
            get {
                return ResourceManager.GetString("ReportLineAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backtrack Count: {0} ähnelt.
        /// </summary>
        internal static string ReportLineBacktrackCount {
            get {
                return ResourceManager.GetString("ReportLineBacktrackCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Basis: {0} ähnelt.
        /// </summary>
        internal static string ReportLineBasis {
            get {
                return ResourceManager.GetString("ReportLineBasis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branches: {0} ähnelt.
        /// </summary>
        internal static string ReportLineBranches {
            get {
                return ResourceManager.GetString("ReportLineBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Constraint Bounds: ähnelt.
        /// </summary>
        internal static string ReportLineConstraintBounds {
            get {
                return ResourceManager.GetString("ReportLineConstraintBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Date: {0} ähnelt.
        /// </summary>
        internal static string ReportLineDatetime0 {
            get {
                return ResourceManager.GetString("ReportLineDatetime0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decisions: ähnelt.
        /// </summary>
        internal static string ReportLineDecisions {
            get {
                return ResourceManager.GetString("ReportLineDecisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Degenerate Pivots: {0} ({1:F2} %) ähnelt.
        /// </summary>
        internal static string ReportLineDegeneratePivots {
            get {
                return ResourceManager.GetString("ReportLineDegeneratePivots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directives: ähnelt.
        /// </summary>
        internal static string ReportLineDirectives {
            get {
                return ResourceManager.GetString("ReportLineDirectives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eliminated Slack Variables: {0} ähnelt.
        /// </summary>
        internal static string ReportLineEliminatedSlackVariables {
            get {
                return ResourceManager.GetString("ReportLineEliminatedSlackVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorings: {0} + {1} ähnelt.
        /// </summary>
        internal static string ReportLineFactorings {
            get {
                return ResourceManager.GetString("ReportLineFactorings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goal Coefficients: ähnelt.
        /// </summary>
        internal static string ReportLineGoalCoefficients {
            get {
                return ResourceManager.GetString("ReportLineGoalCoefficients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goals: ähnelt.
        /// </summary>
        internal static string ReportLineGoals {
            get {
                return ResourceManager.GetString("ReportLineGoals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Infeasible set: ähnelt.
        /// </summary>
        internal static string ReportLineInfeasibleSet {
            get {
                return ResourceManager.GetString("ReportLineInfeasibleSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Iterations: {0} ähnelt.
        /// </summary>
        internal static string ReportLineIterations {
            get {
                return ResourceManager.GetString("ReportLineIterations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Model Name: {0} ähnelt.
        /// </summary>
        internal static string ReportLineModelName {
            get {
                return ResourceManager.GetString("ReportLineModelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move Selection: {0} ähnelt.
        /// </summary>
        internal static string ReportLineMoveSelection {
            get {
                return ResourceManager.GetString("ReportLineMoveSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nonzeros: {0} ähnelt.
        /// </summary>
        internal static string ReportLineNonzeros {
            get {
                return ResourceManager.GetString("ReportLineNonzeros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arithmetic: Double ähnelt.
        /// </summary>
        internal static string ReportLineNumericFormatDouble {
            get {
                return ResourceManager.GetString("ReportLineNumericFormatDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arithmetic: Exact ähnelt.
        /// </summary>
        internal static string ReportLineNumericFormatExact {
            get {
                return ResourceManager.GetString("ReportLineNumericFormatExact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arithmetic: Hybrid ähnelt.
        /// </summary>
        internal static string ReportLineNumericFormatHybrid {
            get {
                return ResourceManager.GetString("ReportLineNumericFormatHybrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 1 Pivots: {0} + {1} ähnelt.
        /// </summary>
        internal static string ReportLinePhase1Pivots {
            get {
                return ResourceManager.GetString("ReportLinePhase1Pivots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 2 Pivots: {0} + {1} ähnelt.
        /// </summary>
        internal static string ReportLinePhase2Pivots {
            get {
                return ResourceManager.GetString("ReportLinePhase2Pivots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pivot Count: {0} ähnelt.
        /// </summary>
        internal static string ReportLinePivotCount {
            get {
                return ResourceManager.GetString("ReportLinePivotCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pricing (double): {0} ähnelt.
        /// </summary>
        internal static string ReportLinePricingDouble {
            get {
                return ResourceManager.GetString("ReportLinePricingDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pricing (exact): {0} ähnelt.
        /// </summary>
        internal static string ReportLinePricingExact {
            get {
                return ResourceManager.GetString("ReportLinePricingExact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rows: {0} -&gt; {1} ähnelt.
        /// </summary>
        internal static string ReportLineRows {
            get {
                return ResourceManager.GetString("ReportLineRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shadow Pricing: ähnelt.
        /// </summary>
        internal static string ReportLineShadowPricing {
            get {
                return ResourceManager.GetString("ReportLineShadowPricing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solve Completion Status: {0} ähnelt.
        /// </summary>
        internal static string ReportLineSolveCompletionStatus {
            get {
                return ResourceManager.GetString("ReportLineSolveCompletionStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver Selected: {0} ähnelt.
        /// </summary>
        internal static string ReportLineSolverSelected {
            get {
                return ResourceManager.GetString("ReportLineSolverSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solve Time (ms): {0} ähnelt.
        /// </summary>
        internal static string ReportLineSolveTimeMs {
            get {
                return ResourceManager.GetString("ReportLineSolveTimeMs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total Time (ms): {0} ähnelt.
        /// </summary>
        internal static string ReportLineTotalTimeMs {
            get {
                return ResourceManager.GetString("ReportLineTotalTimeMs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value Selection: {0} ähnelt.
        /// </summary>
        internal static string ReportLineValueSelection {
            get {
                return ResourceManager.GetString("ReportLineValueSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variables: {0} -&gt; {1} + {2} ähnelt.
        /// </summary>
        internal static string ReportLineVariables {
            get {
                return ResourceManager.GetString("ReportLineVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variables: {0} -&gt; {1} ähnelt.
        /// </summary>
        internal static string ReportLineVariables01 {
            get {
                return ResourceManager.GetString("ReportLineVariables01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable Selection: {0} ähnelt.
        /// </summary>
        internal static string ReportLineVariableSelection {
            get {
                return ResourceManager.GetString("ReportLineVariableSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version: {0} ähnelt.
        /// </summary>
        internal static string ReportLineVersion0 {
            get {
                return ResourceManager.GetString("ReportLineVersion0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die rescue... ähnelt.
        /// </summary>
        internal static string Rescue {
            get {
                return ResourceManager.GetString("Rescue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die result = {0} ähnelt.
        /// </summary>
        internal static string Result0 {
            get {
                return ResourceManager.GetString("Result0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The result cannot be converted to Int32. Either the successProbability argument of the distribution is too small, or probability argument is too big. ähnelt.
        /// </summary>
        internal static string ResultNeedsToBeInteger {
            get {
                return ResourceManager.GetString("ResultNeedsToBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OML returned a solution in an unknown format ähnelt.
        /// </summary>
        internal static string ReturnedASolutionInAnUnknownFormat {
            get {
                return ResourceManager.GetString("ReturnedASolutionInAnUnknownFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Row &apos;{0}&apos; already exists in destination model. ähnelt.
        /// </summary>
        internal static string Row0AlreadyExistsInDestinationModel {
            get {
                return ResourceManager.GetString("Row0AlreadyExistsInDestinationModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die row indexes did not sort correctly ähnelt.
        /// </summary>
        internal static string RowIndexesDidNotSortCorrectly {
            get {
                return ResourceManager.GetString("RowIndexesDidNotSortCorrectly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die row {0} is unbounded ähnelt.
        /// </summary>
        internal static string RowIsUnbounded {
            get {
                return ResourceManager.GetString("RowIsUnbounded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Row {0} needs to be differentiated but {1} is not a differentiable operation. ähnelt.
        /// </summary>
        internal static string RowNeedsToBeDifferentiatedButIsNotDifferentiable01 {
            get {
                return ResourceManager.GetString("RowNeedsToBeDifferentiatedButIsNotDifferentiable01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die rule application failed ähnelt.
        /// </summary>
        internal static string RuleApplicationFailed {
            get {
                return ResourceManager.GetString("RuleApplicationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule (&apos;-&gt;&apos;) should have two parameters ähnelt.
        /// </summary>
        internal static string RuleShouldHaveTwoParameters {
            get {
                return ResourceManager.GetString("RuleShouldHaveTwoParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detected multiple bindings on a single parameter. Please make sure parameters are bound only once. ähnelt.
        /// </summary>
        internal static string SameParametersBoundMoreThanOnce {
            get {
                return ResourceManager.GetString("SameParametersBoundMoreThanOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sampled ähnelt.
        /// </summary>
        internal static string Sampled {
            get {
                return ResourceManager.GetString("Sampled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sampling Method: {0} ähnelt.
        /// </summary>
        internal static string SampleMethod0 {
            get {
                return ResourceManager.GetString("SampleMethod0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sample Count: {0} ähnelt.
        /// </summary>
        internal static string SamplesCount0 {
            get {
                return ResourceManager.GetString("SamplesCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sampling/getting Quantile from the Binomial distribution failed ähnelt.
        /// </summary>
        internal static string SamplingGettingQuantileFromTheBinomialDistributionFailed {
            get {
                return ResourceManager.GetString("SamplingGettingQuantileFromTheBinomialDistributionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SAT solver can&apos;t process the model: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string SATSolverCantProcessTheModel01 {
            get {
                return ResourceManager.GetString("SATSolverCantProcessTheModel01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scenarios Count: {0} ähnelt.
        /// </summary>
        internal static string ScenariosCount0 {
            get {
                return ResourceManager.GetString("ScenariosCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scenarios must include one element ähnelt.
        /// </summary>
        internal static string ScenariosMustIncludeOneElement {
            get {
                return ResourceManager.GetString("ScenariosMustIncludeOneElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SearchFirst list elements must be pre-declared Variables ähnelt.
        /// </summary>
        internal static string SearchFirstListElementsMustBePreDeclaredVariables {
            get {
                return ResourceManager.GetString("SearchFirstListElementsMustBePreDeclaredVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SearchFirst contains Terms not belonging to this Solver  ähnelt.
        /// </summary>
        internal static string SearchFirstTermError {
            get {
                return ResourceManager.GetString("SearchFirstTermError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} second arg must be a constant ähnelt.
        /// </summary>
        internal static string SecondArgMustBeAConstant {
            get {
                return ResourceManager.GetString("SecondArgMustBeAConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} second arg must be nonnegative ähnelt.
        /// </summary>
        internal static string SecondArgMustBeNonnegative {
            get {
                return ResourceManager.GetString("SecondArgMustBeNonnegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The second stage approximation is better that the actual second stage problem result. ähnelt.
        /// </summary>
        internal static string SecondStageApproximationIsBetterThanSecondStageResult {
            get {
                return ResourceManager.GetString("SecondStageApproximationIsBetterThanSecondStageResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Second stage decisions (Average [Min, Max]): ähnelt.
        /// </summary>
        internal static string SecondStageDecisionsValuesAverageMinimalMaximal {
            get {
                return ResourceManager.GetString("SecondStageDecisionsValuesAverageMinimalMaximal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is valid for conic models only. ähnelt.
        /// </summary>
        internal static string SectionIsValidForConicModelsOnly0 {
            get {
                return ResourceManager.GetString("SectionIsValidForConicModelsOnly0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SetBinding may not be called on a Set with fixed values. ähnelt.
        /// </summary>
        internal static string SetBindingMayNotBeCalledOnASetWithFixedValues {
            get {
                return ResourceManager.GetString("SetBindingMayNotBeCalledOnASetWithFixedValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ElementAt operator cannot take an empty constant list variable ähnelt.
        /// </summary>
        internal static string SetListEmptyListUsedInElementAt {
            get {
                return ResourceManager.GetString("SetListEmptyListUsedInElementAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value kind of the domains are incompatible for the set/list operator ähnelt.
        /// </summary>
        internal static string SetListIncompatibleDomainKind {
            get {
                return ResourceManager.GetString("SetListIncompatibleDomainKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The index Term in ElementAt operator must have an interval integer domain from 0 to the maximal length of lists in listVar - 1  ähnelt.
        /// </summary>
        internal static string SetListIncompatibleIndex {
            get {
                return ResourceManager.GetString("SetListIncompatibleIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A composite variable (set/list variable) appears where a scalar variable is expected  ähnelt.
        /// </summary>
        internal static string SetListNonscalorElement {
            get {
                return ResourceManager.GetString("SetListNonscalorElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The index Term in ElementAt operator must be an integer variable  ähnelt.
        /// </summary>
        internal static string SetListNonscalorIndex {
            get {
                return ResourceManager.GetString("SetListNonscalorIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The baseline set of the power-set/power-list variable is null  ähnelt.
        /// </summary>
        internal static string SetListNullBaseline {
            get {
                return ResourceManager.GetString("SetListNullBaseline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The argument to the set/list operator is null  ähnelt.
        /// </summary>
        internal static string SetListNullInput {
            get {
                return ResourceManager.GetString("SetListNullInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The result Term in FirstOccurrence and LastOccurrence must be an Integer Term  ähnelt.
        /// </summary>
        internal static string SetListOccurrenceResultNotInteger {
            get {
                return ResourceManager.GetString("SetListOccurrenceResultNotInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot do Union, Intersection, or Difference on Symbol set variables with different baselines  ähnelt.
        /// </summary>
        internal static string SetListSymbolSetVarNotAllowed {
            get {
                return ResourceManager.GetString("SetListSymbolSetVarNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The set/list variable&apos;s baseline domain cannot be empty  ähnelt.
        /// </summary>
        internal static string SetListVarEmptyDomain {
            get {
                return ResourceManager.GetString("SetListVarEmptyDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The argument variable&apos;s domain must be CspPowerSet or CspPowerList in set/list operator  ähnelt.
        /// </summary>
        internal static string SetListWrongDomain {
            get {
                return ResourceManager.GetString("SetListWrongDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The constant subset must be an array of ordered unique elements  ähnelt.
        /// </summary>
        internal static string SetListWrongSubset {
            get {
                return ResourceManager.GetString("SetListWrongSubset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets of Enum values are not supported. Use Domain.Any instead. ähnelt.
        /// </summary>
        internal static string SetsOfEnumValuesAreNotSupportedUseDomainAnyInstead {
            get {
                return ResourceManager.GetString("SetsOfEnumValuesAreNotSupportedUseDomainAnyInstead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create instance of an empty Submodel &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string SfsSubmodelCannotCreateInstanceOfEmptySubmodel {
            get {
                return ResourceManager.GetString("SfsSubmodelCannotCreateInstanceOfEmptySubmodel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel &apos;{0}&apos; is removed. Cannot instantiate it any more ähnelt.
        /// </summary>
        internal static string SfsSubmodelCannotInstantiateRemovedSubmodel {
            get {
                return ResourceManager.GetString("SfsSubmodelCannotInstantiateRemovedSubmodel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Root model cannot be instantiated ähnelt.
        /// </summary>
        internal static string SfsSubmodelCannotInstantiateRootModel {
            get {
                return ResourceManager.GetString("SfsSubmodelCannotInstantiateRootModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The submodel &apos;{0}&apos; is already instantiated and can no longer be modified. ähnelt.
        /// </summary>
        internal static string SfsSubmodelCannotModifyModels {
            get {
                return ResourceManager.GetString("SfsSubmodelCannotModifyModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel &apos;{0}&apos; is already instantiated and cannot be removed. ähnelt.
        /// </summary>
        internal static string SfsSubmodelCannotRemoveInstantiatedSubmodel {
            get {
                return ResourceManager.GetString("SfsSubmodelCannotRemoveInstantiatedSubmodel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Submodel nesting exceeds the limit of {0}. ähnelt.
        /// </summary>
        internal static string SfsSubmodelExceedNestingLimit {
            get {
                return ResourceManager.GetString("SfsSubmodelExceedNestingLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decision member not found in the SubmodelDecision ähnelt.
        /// </summary>
        internal static string SfsSubmodelInstanceNotFound {
            get {
                return ResourceManager.GetString("SfsSubmodelInstanceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SubmodelDecision member not found in the SubmodelDecision ähnelt.
        /// </summary>
        internal static string SfsSubmodelSubmodelInstanceNotFound {
            get {
                return ResourceManager.GetString("SfsSubmodelSubmodelInstanceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simplex solver can&apos;t process the model: &apos;{0}&apos;, &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string SimplexSolverCantProcessTheModel01 {
            get {
                return ResourceManager.GetString("SimplexSolverCantProcessTheModel01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SimplexSolver symbol is missing ähnelt.
        /// </summary>
        internal static string SimplexSolverSymbolIsMissing {
            get {
                return ResourceManager.GetString("SimplexSolverSymbolIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Singular basis! ähnelt.
        /// </summary>
        internal static string SingularBasis {
            get {
                return ResourceManager.GetString("SingularBasis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size of sub matrix is fault ähnelt.
        /// </summary>
        internal static string SizeOfSubmatrixIsFault {
            get {
                return ResourceManager.GetString("SizeOfSubmatrixIsFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The sizes of {0} and {1} do not match. ähnelt.
        /// </summary>
        internal static string SizesDoNotMatch {
            get {
                return ResourceManager.GetString("SizesDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SMPS can only be parsed using a file or directory path ähnelt.
        /// </summary>
        internal static string SMPSCanOnlyBeParsedUsingFileOrDirectoryPath {
            get {
                return ResourceManager.GetString("SMPSCanOnlyBeParsedUsingFileOrDirectoryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solution accepted: alg={0}, res={1}, vals={2}, fMip={3} ähnelt.
        /// </summary>
        internal static string SolutionAcceptedAlg0Res1Vals2FMip3 {
            get {
                return ResourceManager.GetString("SolutionAcceptedAlg0Res1Vals2FMip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solution is out of date. ähnelt.
        /// </summary>
        internal static string SolutionIsOutOfDate {
            get {
                return ResourceManager.GetString("SolutionIsOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die solutionMapping argument is not a PluginSolutionMapping object. ähnelt.
        /// </summary>
        internal static string SolutionMappingArgumentIsNotAPluginSolutionMappingObject {
            get {
                return ResourceManager.GetString("SolutionMappingArgumentIsNotAPluginSolutionMappingObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solutionMapping argument is not a LinearSolutionMapping object. ähnelt.
        /// </summary>
        internal static string SolutionMappingIsNotALinearSolutionMapping {
            get {
                return ResourceManager.GetString("SolutionMappingIsNotALinearSolutionMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solution quality is: {0} ähnelt.
        /// </summary>
        internal static string SolutionQualityIs0 {
            get {
                return ResourceManager.GetString("SolutionQualityIs0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solution rejected: alg={0}, res={1}, vals={2}, fMip={3} ähnelt.
        /// </summary>
        internal static string SolutionRejectedAlg0Res1Vals2FMip3 {
            get {
                return ResourceManager.GetString("SolutionRejectedAlg0Res1Vals2FMip3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solve method needed to be called before checking for solution details ähnelt.
        /// </summary>
        internal static string SolveMethodNeededToBeCalledBeforeCheckingSolution {
            get {
                return ResourceManager.GetString("SolveMethodNeededToBeCalledBeforeCheckingSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISolverEnvironment parameter cannot be null when calling PluginSolverCollection.GetSolvers or PluginSolverCollection.GetDefaultSolver ähnelt.
        /// </summary>
        internal static string SolverContextCannotBeNull {
            get {
                return ResourceManager.GetString("SolverContextCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is registered with the {1} interface but does not support it ähnelt.
        /// </summary>
        internal static string SolverDoesNotImplementInterface {
            get {
                return ResourceManager.GetString("SolverDoesNotImplementInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not support bounded variables. Remove this directive and use a directive that supports bounded variables. ähnelt.
        /// </summary>
        internal static string SolverDoesNotSupportBoundedVariables {
            get {
                return ResourceManager.GetString("SolverDoesNotSupportBoundedVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not support constrained models. Remove this directive and use a directive that supports constrained models. ähnelt.
        /// </summary>
        internal static string SolverDoesNotSupportConstrainedModels {
            get {
                return ResourceManager.GetString("SolverDoesNotSupportConstrainedModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver does not support getting or setting properties ähnelt.
        /// </summary>
        internal static string SolverDoesNotSupportGettingOrSettingProperties {
            get {
                return ResourceManager.GetString("SolverDoesNotSupportGettingOrSettingProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not support non-differentiable models. Remove this directive and use a directive that supports non-differentiable models. ähnelt.
        /// </summary>
        internal static string SolverDoesNotSupportNonDifferentiableModels {
            get {
                return ResourceManager.GetString("SolverDoesNotSupportNonDifferentiableModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not support the operation {1}. Remove this directive and use a directive that supports {1}. ähnelt.
        /// </summary>
        internal static string SolverDoesNotSupportOperation {
            get {
                return ResourceManager.GetString("SolverDoesNotSupportOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver interface {0} does not exist or is not supported ähnelt.
        /// </summary>
        internal static string SolverInterfaceNotSupported {
            get {
                return ResourceManager.GetString("SolverInterfaceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver must be ConstraintSystem ähnelt.
        /// </summary>
        internal static string SolverMustBeConstraintSystem {
            get {
                return ResourceManager.GetString("SolverMustBeConstraintSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver must be SimplexSolver ähnelt.
        /// </summary>
        internal static string SolverMustBeSimplexSolver {
            get {
                return ResourceManager.GetString("SolverMustBeSimplexSolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver must implement IInteriorPointStatistics ähnelt.
        /// </summary>
        internal static string SolverMustImplementIInteriorPointStatistics {
            get {
                return ResourceManager.GetString("SolverMustImplementIInteriorPointStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver must implement ILinearModel ähnelt.
        /// </summary>
        internal static string SolverMustImplementILinearModel {
            get {
                return ResourceManager.GetString("SolverMustImplementILinearModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver must implement ILinearSimplexStatistics ähnelt.
        /// </summary>
        internal static string SolverMustImplementILinearSimplexStatistics {
            get {
                return ResourceManager.GetString("SolverMustImplementILinearSimplexStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Solver&apos; option must be &apos;Simplex&apos;: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string SolverOptionMustBeSimplex0 {
            get {
                return ResourceManager.GetString("SolverOptionMustBeSimplex0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simplex must receive at least one SimplexSolverParams object. ähnelt.
        /// </summary>
        internal static string SolverParamtersCouldNotBeEmpty {
            get {
                return ResourceManager.GetString("SolverParamtersCouldNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver requires FunctionEvaluator to be specified before calling solve. ähnelt.
        /// </summary>
        internal static string SolverRequiresFunctionEvaluatorToBeSpecifiedBeforeCallingSolve {
            get {
                return ResourceManager.GetString("SolverRequiresFunctionEvaluatorToBeSpecifiedBeforeCallingSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver has been Reset. Cannot continue solving for the next solution. ähnelt.
        /// </summary>
        internal static string SolverResetDuringSolve {
            get {
                return ResourceManager.GetString("SolverResetDuringSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver solution quality: {0}. ähnelt.
        /// </summary>
        internal static string SolverSolutionQuality0 {
            get {
                return ResourceManager.GetString("SolverSolutionQuality0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solving Method: {0} ähnelt.
        /// </summary>
        internal static string SolvingMethod0 {
            get {
                return ResourceManager.GetString("SolvingMethod0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SOS1 constraints are not supported in OML ähnelt.
        /// </summary>
        internal static string SOS1ConstraintsAreNotSupportedInOML {
            get {
                return ResourceManager.GetString("SOS1ConstraintsAreNotSupportedInOML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SOS2 constraints are not supported in OML ähnelt.
        /// </summary>
        internal static string SOS2ConstraintsAreNotSupportedInOML {
            get {
                return ResourceManager.GetString("SOS2ConstraintsAreNotSupportedInOML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Right-hand clause in Sos2 must contain at least two decisions. ähnelt.
        /// </summary>
        internal static string Sos2NeedsAtLeastTwoDecisions {
            get {
                return ResourceManager.GetString("Sos2NeedsAtLeastTwoDecisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only steepest edge pricing is supported with the SOS2 models ähnelt.
        /// </summary>
        internal static string SOS2NotSupported {
            get {
                return ResourceManager.GetString("SOS2NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Miss SOS reference row name ähnelt.
        /// </summary>
        internal static string SOSRowNameMissing {
            get {
                return ResourceManager.GetString("SOSRowNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source model contains duplicate keys ähnelt.
        /// </summary>
        internal static string SourceModelContainsDuplicateKeys {
            get {
                return ResourceManager.GetString("SourceModelContainsDuplicateKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spans not compatible ähnelt.
        /// </summary>
        internal static string SpansNotCompatible {
            get {
                return ResourceManager.GetString("SpansNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SparseDomain with incorrect indexes ähnelt.
        /// </summary>
        internal static string SparseDomainWithIncorrectIndexes {
            get {
                return ResourceManager.GetString("SparseDomainWithIncorrectIndexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting point =  ähnelt.
        /// </summary>
        internal static string StartingPoint {
            get {
                return ResourceManager.GetString("StartingPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting point dimensionality is not the same as the objective function ähnelt.
        /// </summary>
        internal static string StartingPointDimensionalityDiffersFromObjectiveFunction {
            get {
                return ResourceManager.GetString("StartingPointDimensionalityDiffersFromObjectiveFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The starting point should be a numeric value. ähnelt.
        /// </summary>
        internal static string StartingPointShouldBeNumber {
            get {
                return ResourceManager.GetString("StartingPointShouldBeNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values for starting point should be numbers ähnelt.
        /// </summary>
        internal static string StartingPointShouldBeNumbers {
            get {
                return ResourceManager.GetString("StartingPointShouldBeNumbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Statistical Lower Bound: {0} +- {1} ähnelt.
        /// </summary>
        internal static string StatisticalLowerBound01 {
            get {
                return ResourceManager.GetString("StatisticalLowerBound01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Statistical Upper Bound: {0} +- {1} ähnelt.
        /// </summary>
        internal static string StatisticalUpperBound01 {
            get {
                return ResourceManager.GetString("StatisticalUpperBound01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step count: {0}. ähnelt.
        /// </summary>
        internal static string StepCount0 {
            get {
                return ResourceManager.GetString("StepCount0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic core file should have one of the following suffixes: {0} ähnelt.
        /// </summary>
        internal static string StochasticCoreFileShouldHaveOneOfThoseSuffixes0 {
            get {
                return ResourceManager.GetString("StochasticCoreFileShouldHaveOneOfThoseSuffixes0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} stochastic file cannot be found ähnelt.
        /// </summary>
        internal static string StochasticFileCannotBeFound0 {
            get {
                return ResourceManager.GetString("StochasticFileCannotBeFound0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic Measures: ähnelt.
        /// </summary>
        internal static string StochasticMeasures {
            get {
                return ResourceManager.GetString("StochasticMeasures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multiple goals are not allowed in stochastic models. ähnelt.
        /// </summary>
        internal static string StochasticModelCannotContainMoreThanOneGoal {
            get {
                return ResourceManager.GetString("StochasticModelCannotContainMoreThanOneGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SOS2 constraints are not allowed in stochastic models. ähnelt.
        /// </summary>
        internal static string StochasticModelCannotHaveSOS2Constraints {
            get {
                return ResourceManager.GetString("StochasticModelCannotHaveSOS2Constraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic models can only be saved in OML format. ähnelt.
        /// </summary>
        internal static string StochasticModelCanOnlyBeSavedToAnOMLFile {
            get {
                return ResourceManager.GetString("StochasticModelCanOnlyBeSavedToAnOMLFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic models must contain a goal. ähnelt.
        /// </summary>
        internal static string StochasticModelMustContainAGoal {
            get {
                return ResourceManager.GetString("StochasticModelMustContainAGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic models must be linear. Verify there are no nonlinear terms in the goal or constraints. ähnelt.
        /// </summary>
        internal static string StochasticModelsMustBeLinear {
            get {
                return ResourceManager.GetString("StochasticModelsMustBeLinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic models need to have both recourse decisions and random parameters ähnelt.
        /// </summary>
        internal static string StochasticNeedRecourseDecisionsAndRandomParameters {
            get {
                return ResourceManager.GetString("StochasticNeedRecourseDecisionsAndRandomParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Strategy : {0} ({1}) ähnelt.
        /// </summary>
        internal static string Strategy01 {
            get {
                return ResourceManager.GetString("Strategy01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incompatible symbol domain  ähnelt.
        /// </summary>
        internal static string StringDomainIncompatible {
            get {
                return ResourceManager.GetString("StringDomainIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This function does not support inputs with symbol domains  ähnelt.
        /// </summary>
        internal static string StringDomainNotSupported {
            get {
                return ResourceManager.GetString("StringDomainNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String is not a member of enumerated domain ähnelt.
        /// </summary>
        internal static string StringIsNotAMemberOfEnumeratedDomain {
            get {
                return ResourceManager.GetString("StringIsNotAMemberOfEnumeratedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sum of all probabilities should not exceed 1 ähnelt.
        /// </summary>
        internal static string SumOfAllProbabilitiesShouldNotExceedOne {
            get {
                return ResourceManager.GetString("SumOfAllProbabilitiesShouldNotExceedOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol already has a scope ähnelt.
        /// </summary>
        internal static string SymbolAlreadyHasAScope {
            get {
                return ResourceManager.GetString("SymbolAlreadyHasAScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbolic factorization time = {0:F2} sec, type = {1} ähnelt.
        /// </summary>
        internal static string SymbolicFactorizationTime0SecType1 {
            get {
                return ResourceManager.GetString("SymbolicFactorizationTime0SecType1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {3}: columns = {0}, nonzeros = {1}, sp = {2:F3} ähnelt.
        /// </summary>
        internal static string SymbolicFactorNonzeros0 {
            get {
                return ResourceManager.GetString("SymbolicFactorNonzeros0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expression contains the reserved symbol {0} ähnelt.
        /// </summary>
        internal static string SymbolIsReserved0 {
            get {
                return ResourceManager.GetString("SymbolIsReserved0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol &quot;{0}&quot;not found in the domain of {1} ähnelt.
        /// </summary>
        internal static string SymbolNotFoundInDomain {
            get {
                return ResourceManager.GetString("SymbolNotFoundInDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SymbolScope already bound to an expression ähnelt.
        /// </summary>
        internal static string SymbolScopeAlreadyBoundToAnExpression {
            get {
                return ResourceManager.GetString("SymbolScopeAlreadyBoundToAnExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol {0} with domain {1} could not be made a Variable ähnelt.
        /// </summary>
        internal static string SymbolWithDomainCouldNotBeMadeAVariable {
            get {
                return ResourceManager.GetString("SymbolWithDomainCouldNotBeMadeAVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SymmetricSparseMatrix does not support element insertion ähnelt.
        /// </summary>
        internal static string SymmetricSparseMatrixDoesNotSupportElementInsertion {
            get {
                return ResourceManager.GetString("SymmetricSparseMatrixDoesNotSupportElementInsertion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax error: {0}, {1}, {2} ähnelt.
        /// </summary>
        internal static string SyntaxError012 {
            get {
                return ResourceManager.GetString("SyntaxError012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die system error cannot schedule tasks ähnelt.
        /// </summary>
        internal static string SystemErrorCannotScheduleTasks {
            get {
                return ResourceManager.GetString("SystemErrorCannotScheduleTasks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Each row array of a table must have the same dimension as the column variable array  ähnelt.
        /// </summary>
        internal static string TableMismachedDimension {
            get {
                return ResourceManager.GetString("TableMismachedDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Task creation failed ähnelt.
        /// </summary>
        internal static string TaskCreationFailed {
            get {
                return ResourceManager.GetString("TaskCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Term &apos;{0}&apos; has been added to model &apos;{1}&apos; and cannot be added to other models ähnelt.
        /// </summary>
        internal static string TermHasBeenAddedToAModel01 {
            get {
                return ResourceManager.GetString("TermHasBeenAddedToAModel01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The arity of the tuple must be the same as the arity of the variable tuple ähnelt.
        /// </summary>
        internal static string TheArityOfTheTupleMustBeTheSameAsTheArityOfTheVariableTuple {
            get {
                return ResourceManager.GetString("TheArityOfTheTupleMustBeTheSameAsTheArityOfTheVariableTuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The arity of tuples in the list must be the same as the arity of the variable tuple ähnelt.
        /// </summary>
        internal static string TheArityOfTuplesInTheListMustBeTheSameAsTheArityOfTheVariableTuple {
            get {
                return ResourceManager.GetString("TheArityOfTuplesInTheListMustBeTheSameAsTheArityOfTheVariableTuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The cut is invalid. {0} ähnelt.
        /// </summary>
        internal static string TheCutIsInvalid0 {
            get {
                return ResourceManager.GetString("TheCutIsInvalid0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The first argument to ElementOf must be a list ähnelt.
        /// </summary>
        internal static string TheFirstArgumentToElementOfMustBeAList {
            get {
                return ResourceManager.GetString("TheFirstArgumentToElementOfMustBeAList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The goal could not be added to the model. ähnelt.
        /// </summary>
        internal static string TheGoalCouldNotBeAddedToTheModel {
            get {
                return ResourceManager.GetString("TheGoalCouldNotBeAddedToTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The lower bound and the upper bound must be finite numbers. ähnelt.
        /// </summary>
        internal static string TheLowerBoundAndTheUpperBoundMustBeFiniteNumbers {
            get {
                return ResourceManager.GetString("TheLowerBoundAndTheUpperBoundMustBeFiniteNumbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The mean must be a finite number and the standard deviation must be a non-negative number. ähnelt.
        /// </summary>
        internal static string TheMeanMustBeAFiniteNumberStandardDeviationMustBeANonNegativeNumber {
            get {
                return ResourceManager.GetString("TheMeanMustBeAFiniteNumberStandardDeviationMustBeANonNegativeNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The mean of the logarithm of the distribution must be a finite number and the standard deviation of the logarithm of the distribution must be a non-negative number. ähnelt.
        /// </summary>
        internal static string TheMeanOfLogMustBeAFiniteNumberStandardDeviationOfLogMustBeANonNegativeNumber {
            get {
                return ResourceManager.GetString("TheMeanOfLogMustBeAFiniteNumberStandardDeviationOfLogMustBeANonNegativeNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The method or operation is not implemented. ähnelt.
        /// </summary>
        internal static string TheMethodOrOperationIsNotImplemented {
            get {
                return ResourceManager.GetString("TheMethodOrOperationIsNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The model is empty ähnelt.
        /// </summary>
        internal static string TheModelIsEmpty {
            get {
                return ResourceManager.GetString("TheModelIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The model must contain a goal. ähnelt.
        /// </summary>
        internal static string TheModelMustContainAGoal {
            get {
                return ResourceManager.GetString("TheModelMustContainAGoal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of index properties must match the number of index sets. ähnelt.
        /// </summary>
        internal static string TheNumberOfIndexPropertiesMustMatchTheNumberOfIndexSets {
            get {
                return ResourceManager.GetString("TheNumberOfIndexPropertiesMustMatchTheNumberOfIndexSets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The number of value properties must match the number of elements in the tuple. ähnelt.
        /// </summary>
        internal static string TheNumberOfValuePropertiesMustMatchTheNumberOfElementsInTheTuple {
            get {
                return ResourceManager.GetString("TheNumberOfValuePropertiesMustMatchTheNumberOfElementsInTheTuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property or field &apos;{0}&apos; was not found. ähnelt.
        /// </summary>
        internal static string ThePropertyOrField0WasNotFound {
            get {
                return ResourceManager.GetString("ThePropertyOrField0WasNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property or field &apos;{0}&apos; was not found on type &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string ThePropertyOrField0WasNotFoundOnType1 {
            get {
                return ResourceManager.GetString("ThePropertyOrField0WasNotFoundOnType1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The rate must be a finite positive number. ähnelt.
        /// </summary>
        internal static string TheRateMustBeAFinitePositiveNumber {
            get {
                return ResourceManager.GetString("TheRateMustBeAFinitePositiveNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is already an active model in the context. ähnelt.
        /// </summary>
        internal static string ThereIsAlreadyAnActiveModelInTheContext {
            get {
                return ResourceManager.GetString("ThereIsAlreadyAnActiveModelInTheContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no solution to propagate ähnelt.
        /// </summary>
        internal static string ThereIsNoSolutionToPropagate {
            get {
                return ResourceManager.GetString("ThereIsNoSolutionToPropagate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There should be at least one scenario ähnelt.
        /// </summary>
        internal static string ThereShouldBeAtLeastOneScenario {
            get {
                return ResourceManager.GetString("ThereShouldBeAtLeastOneScenario", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The row does not sum to 0.  ähnelt.
        /// </summary>
        internal static string TheRowDoesNotSumTo0 {
            get {
                return ResourceManager.GetString("TheRowDoesNotSumTo0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver does not support Sos1 ähnelt.
        /// </summary>
        internal static string TheSolverDoesNotSupportSos1 {
            get {
                return ResourceManager.GetString("TheSolverDoesNotSupportSos1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver does not support Sos2 ähnelt.
        /// </summary>
        internal static string TheSolverDoesNotSupportSos2 {
            get {
                return ResourceManager.GetString("TheSolverDoesNotSupportSos2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver(s) threw an exception while solving the model ähnelt.
        /// </summary>
        internal static string TheSolverSThrewAnExceptionWhileSolvingTheModel {
            get {
                return ResourceManager.GetString("TheSolverSThrewAnExceptionWhileSolvingTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The success probability must be a non-zero probability. ähnelt.
        /// </summary>
        internal static string TheSuccessProbabilityMustBeANonZeroProbability {
            get {
                return ResourceManager.GetString("TheSuccessProbabilityMustBeANonZeroProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The success probability must be a probability and the number of trials must be a positive number. ähnelt.
        /// </summary>
        internal static string TheSuccessProbabilityMustBeAProbabilityAndTheNumberOfTrialsMustBeAPositiveNumber {
            get {
                return ResourceManager.GetString("TheSuccessProbabilityMustBeAProbabilityAndTheNumberOfTrialsMustBeAPositiveNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value {0} is not an allowable {1} value. ähnelt.
        /// </summary>
        internal static string TheValue0IsNotAnAllowable1Value {
            get {
                return ResourceManager.GetString("TheValue0IsNotAnAllowable1Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value &quot;{0}&quot; was not present in the enumerated domain. ähnelt.
        /// </summary>
        internal static string TheValue0WasNotPresentInTheEnumeratedDomain {
            get {
                return ResourceManager.GetString("TheValue0WasNotPresentInTheEnumeratedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Term does not express a domain. ähnelt.
        /// </summary>
        internal static string ThisCanNotExpressDomain {
            get {
                return ResourceManager.GetString("ThisCanNotExpressDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This solver does not support setting a property while solving. ähnelt.
        /// </summary>
        internal static string ThisSolverDoesNotSupportSettingAPropertyWhileSolving {
            get {
                return ResourceManager.GetString("ThisSolverDoesNotSupportSettingAPropertyWhileSolving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This version of the product has expired. Please contact Microsoft Corporation for licensing options. ähnelt.
        /// </summary>
        internal static string ThisVersionOfTheProductHasExpiredPleaseContactMicrosoftCorporationForLicensingOptions {
            get {
                return ResourceManager.GetString("ThisVersionOfTheProductHasExpiredPleaseContactMicrosoftCorporationForLicensingOpt" +
                        "ions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interrupted due to time-out or user&apos;s request ähnelt.
        /// </summary>
        internal static string Timeout {
            get {
                return ResourceManager.GetString("Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time to first Solution :  ähnelt.
        /// </summary>
        internal static string TimeToFirstSolution {
            get {
                return ResourceManager.GetString("TimeToFirstSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tokens not in same version ähnelt.
        /// </summary>
        internal static string TokensNotInSameVersion {
            get {
                return ResourceManager.GetString("TokensNotInSameVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tolerance difference: {0}. ähnelt.
        /// </summary>
        internal static string ToleranceDifference0 {
            get {
                return ResourceManager.GetString("ToleranceDifference0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tolerance is too low ähnelt.
        /// </summary>
        internal static string ToleranceTooLow {
            get {
                return ResourceManager.GetString("ToleranceTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ({0} per sec)
        /// ähnelt.
        /// </summary>
        internal static string TreeSearchStatsPerSec {
            get {
                return ResourceManager.GetString("TreeSearchStatsPerSec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total nb events:         {0,-10}  ähnelt.
        /// </summary>
        internal static string TreeSearchStatsTotalNbEvents010 {
            get {
                return ResourceManager.GetString("TreeSearchStatsTotalNbEvents010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total nb nodes:          {0,-10}  ähnelt.
        /// </summary>
        internal static string TreeSearchStatsTotalNbNodes010 {
            get {
                return ResourceManager.GetString("TreeSearchStatsTotalNbNodes010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total time:              {0}ms
        /// ähnelt.
        /// </summary>
        internal static string TreeSearchStatsTotalTime0Ms {
            get {
                return ResourceManager.GetString("TreeSearchStatsTotalTime0Ms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TryGet should not return false ähnelt.
        /// </summary>
        internal static string TryGetShouldNotReturnFalse {
            get {
                return ResourceManager.GetString("TryGetShouldNotReturnFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuple data {0} does not belong to the domain {1} specified in the Tuples definition ähnelt.
        /// </summary>
        internal static string TupleDataDoesNotBelongToDomainSpecifiedIn01 {
            get {
                return ResourceManager.GetString("TupleDataDoesNotBelongToDomainSpecifiedIn01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples {0} is not bound to a data source ähnelt.
        /// </summary>
        internal static string Tuples0IsNotBoundToADataSource {
            get {
                return ResourceManager.GetString("Tuples0IsNotBoundToADataSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples defined as a Random Parameter cannot be used in Table Constraint ähnelt.
        /// </summary>
        internal static string TuplesDefinedAsARandomParameterCannotBeUsedInTableConstraint {
            get {
                return ResourceManager.GetString("TuplesDefinedAsARandomParameterCannotBeUsedInTableConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples must be added to the model before being used ähnelt.
        /// </summary>
        internal static string TuplesMustBeAddedToTheModelBeforeBeingUsed {
            get {
                return ResourceManager.GetString("TuplesMustBeAddedToTheModelBeforeBeingUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples must include at least one element ähnelt.
        /// </summary>
        internal static string TuplesMustIncludeAtLeastOneElement {
            get {
                return ResourceManager.GetString("TuplesMustIncludeAtLeastOneElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples parameter data must be a list of lists ähnelt.
        /// </summary>
        internal static string TuplesParameterDataMustBeAListOfLists {
            get {
                return ResourceManager.GetString("TuplesParameterDataMustBeAListOfLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tuples parameters cannot be indexed ähnelt.
        /// </summary>
        internal static string TuplesParametersCannotBeIndexed {
            get {
                return ResourceManager.GetString("TuplesParametersCannotBeIndexed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Both {0} and {1} are null ähnelt.
        /// </summary>
        internal static string TwoAreNull01 {
            get {
                return ResourceManager.GetString("TwoAreNull01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stochastic Solution Type: {0} ähnelt.
        /// </summary>
        internal static string TypeOfStochasticSolution0 {
            get {
                return ResourceManager.GetString("TypeOfStochasticSolution0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undefined submodel instance ähnelt.
        /// </summary>
        internal static string UndefinedSubmodelInstance {
            get {
                return ResourceManager.GetString("UndefinedSubmodelInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die unexpected column kind ähnelt.
        /// </summary>
        internal static string UnexpectedColumnKind {
            get {
                return ResourceManager.GetString("UnexpectedColumnKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected &apos;INTEND&apos; marker ähnelt.
        /// </summary>
        internal static string UnexpectedINTENDMarker {
            get {
                return ResourceManager.GetString("UnexpectedINTENDMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected term ‘{0}’. Expected: ‘{1}’ ähnelt.
        /// </summary>
        internal static string UnExpectedNeedToBe01 {
            get {
                return ResourceManager.GetString("UnExpectedNeedToBe01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected term ‘{0}’. Expected: ‘{1}’ or &apos;{2}&apos; ähnelt.
        /// </summary>
        internal static string UnexpectedNeedToBe012 {
            get {
                return ResourceManager.GetString("UnexpectedNeedToBe012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected term ‘{0}’. Expected: ‘{1}’ or end of file ähnelt.
        /// </summary>
        internal static string UnexpectedNeedToBe01orEndOfFile {
            get {
                return ResourceManager.GetString("UnexpectedNeedToBe01orEndOfFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected term ‘{0}’. ähnelt.
        /// </summary>
        internal static string UnexpectedTerm0 {
            get {
                return ResourceManager.GetString("UnexpectedTerm0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected term &apos;{0}&apos; after &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string UnexpectedTermAfterTerm01 {
            get {
                return ResourceManager.GetString("UnexpectedTermAfterTerm01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown cone id: {0} ähnelt.
        /// </summary>
        internal static string UnknownConeId0 {
            get {
                return ResourceManager.GetString("UnknownConeId0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown data value {0} ähnelt.
        /// </summary>
        internal static string UnknownDataValue0 {
            get {
                return ResourceManager.GetString("UnknownDataValue0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown domain encountered ähnelt.
        /// </summary>
        internal static string UnknownDomainEncountered {
            get {
                return ResourceManager.GetString("UnknownDomainEncountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain type is unknown  ähnelt.
        /// </summary>
        internal static string UnknownDomainType {
            get {
                return ResourceManager.GetString("UnknownDomainType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown kind detected in save ähnelt.
        /// </summary>
        internal static string UnknownKindDetectedInSave {
            get {
                return ResourceManager.GetString("UnknownKindDetectedInSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown marker: {0} ähnelt.
        /// </summary>
        internal static string UnknownMarker {
            get {
                return ResourceManager.GetString("UnknownMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The modeler inside a Term is unknown  ähnelt.
        /// </summary>
        internal static string UnknownModelerType {
            get {
                return ResourceManager.GetString("UnknownModelerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown operation id: {0} ähnelt.
        /// </summary>
        internal static string UnknownOperation0 {
            get {
                return ResourceManager.GetString("UnknownOperation0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot load the plug-in solver assembly {0}. ähnelt.
        /// </summary>
        internal static string UnknownPluginAssembly {
            get {
                return ResourceManager.GetString("UnknownPluginAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find the plug-in solver parameter class {0} ähnelt.
        /// </summary>
        internal static string UnknownPluginSolverParameterType {
            get {
                return ResourceManager.GetString("UnknownPluginSolverParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find the plug-in solver class {0} or it does not implement {1} interface ähnelt.
        /// </summary>
        internal static string UnknownPluginSolverType {
            get {
                return ResourceManager.GetString("UnknownPluginSolverType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown quality {0} ähnelt.
        /// </summary>
        internal static string UnknownQuality {
            get {
                return ResourceManager.GetString("UnknownQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown row: &apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string UnknownRow {
            get {
                return ResourceManager.GetString("UnknownRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown row variable index: {0} ähnelt.
        /// </summary>
        internal static string UnknownRowVariableIndex {
            get {
                return ResourceManager.GetString("UnknownRowVariableIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol does not belong to the symbol domain  ähnelt.
        /// </summary>
        internal static string UnknownString {
            get {
                return ResourceManager.GetString("UnknownString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown supported MPS field: QUADOBJ ähnelt.
        /// </summary>
        internal static string UnknownSupportedMPSFieldQUADOBJ {
            get {
                return ResourceManager.GetString("UnknownSupportedMPSFieldQUADOBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The variable given is unknown ähnelt.
        /// </summary>
        internal static string UnknownVariable {
            get {
                return ResourceManager.GetString("UnknownVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown variable: {0} ähnelt.
        /// </summary>
        internal static string UnknownVariable0 {
            get {
                return ResourceManager.GetString("UnknownVariable0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown variable id: {0} ähnelt.
        /// </summary>
        internal static string UnknownVariableId {
            get {
                return ResourceManager.GetString("UnknownVariableId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Term has unknown type  ähnelt.
        /// </summary>
        internal static string UnknowTermType {
            get {
                return ResourceManager.GetString("UnknowTermType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unmatched sizes of lists in SumProduct ähnelt.
        /// </summary>
        internal static string UnmatchedSizesOfListsInSumProduct {
            get {
                return ResourceManager.GetString("UnmatchedSizesOfListsInSumProduct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal Error: unnecessary change on the variable  ähnelt.
        /// </summary>
        internal static string UnnecessaryChange {
            get {
                return ResourceManager.GetString("UnnecessaryChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized constraint programming solver term ähnelt.
        /// </summary>
        internal static string UnrecognizedCspTerm {
            get {
                return ResourceManager.GetString("UnrecognizedCspTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized term ähnelt.
        /// </summary>
        internal static string UnrecognizedTerm {
            get {
                return ResourceManager.GetString("UnrecognizedTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input to an unsigned long operator must be either an integer variable or an unsigned long variable  ähnelt.
        /// </summary>
        internal static string UnsignedLongOperatorInputInvalid {
            get {
                return ResourceManager.GetString("UnsignedLongOperatorInputInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given Term is not an unsigned long variable  ähnelt.
        /// </summary>
        internal static string UnsignedLongVarInvalid {
            get {
                return ResourceManager.GetString("UnsignedLongVarInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported model type ähnelt.
        /// </summary>
        internal static string UnsupportedModelType {
            get {
                return ResourceManager.GetString("UnsupportedModelType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die upper triangular coordinate seen ähnelt.
        /// </summary>
        internal static string UpperTriangularCoordinateSeen {
            get {
                return ResourceManager.GetString("UpperTriangularCoordinateSeen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value in ElementOf is not an integer. ähnelt.
        /// </summary>
        internal static string ValueInElementOfIsNotAnInteger {
            get {
                return ResourceManager.GetString("ValueInElementOfIsNotAnInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value is not linear or quadratic ähnelt.
        /// </summary>
        internal static string ValueIsNotLinearOrQuadratic {
            get {
                return ResourceManager.GetString("ValueIsNotLinearOrQuadratic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value set cannot be empty ähnelt.
        /// </summary>
        internal static string ValueSetCannotBeEmpty {
            get {
                return ResourceManager.GetString("ValueSetCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values for symbol &apos;{0}&apos; are locked. ähnelt.
        /// </summary>
        internal static string ValuesForSymbolAreLocked {
            get {
                return ResourceManager.GetString("ValuesForSymbolAreLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable &apos;{0}&apos; already exists in destination model. ähnelt.
        /// </summary>
        internal static string Variable0AlreadyExistsInDestinationModel {
            get {
                return ResourceManager.GetString("Variable0AlreadyExistsInDestinationModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable already belongs to another cone. ähnelt.
        /// </summary>
        internal static string VariableAlreadyBelongsToAnotherCone {
            get {
                return ResourceManager.GetString("VariableAlreadyBelongsToAnotherCone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable domain does not contain correct integer values ähnelt.
        /// </summary>
        internal static string VariableDomainDoesNotContainCorrectIntegerValues {
            get {
                return ResourceManager.GetString("VariableDomainDoesNotContainCorrectIntegerValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable domain exceeds CspSolver integer domain ähnelt.
        /// </summary>
        internal static string VariableDomainExceedsCspSolverIntegerDomain {
            get {
                return ResourceManager.GetString("VariableDomainExceedsCspSolverIntegerDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable has already been added to the model: {0} ähnelt.
        /// </summary>
        internal static string VariableHasAlreadyBeenAddedToTheModel {
            get {
                return ResourceManager.GetString("VariableHasAlreadyBeenAddedToTheModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable has empty value set ähnelt.
        /// </summary>
        internal static string VariableHasEmptyValueSet {
            get {
                return ResourceManager.GetString("VariableHasEmptyValueSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable must be added to solver before use ähnelt.
        /// </summary>
        internal static string VariableMustBeAddedToSolverBeforeUse {
            get {
                return ResourceManager.GetString("VariableMustBeAddedToSolverBeforeUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable must be added to solver before use in constraint ähnelt.
        /// </summary>
        internal static string VariableMustBeAddedToSolverBeforeUseInConstraint {
            get {
                return ResourceManager.GetString("VariableMustBeAddedToSolverBeforeUseInConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable must be based on a user symbol ähnelt.
        /// </summary>
        internal static string VariableMustBeBasedOnAUserSymbol {
            get {
                return ResourceManager.GetString("VariableMustBeBasedOnAUserSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die variable not found in solution ähnelt.
        /// </summary>
        internal static string VariableNotFoundInSolution {
            get {
                return ResourceManager.GetString("VariableNotFoundInSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable seen with unrecognized Domain ähnelt.
        /// </summary>
        internal static string VariableSeenWithUnrecognizedDomain {
            get {
                return ResourceManager.GetString("VariableSeenWithUnrecognizedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable {0} should be 0 but is {1}. ähnelt.
        /// </summary>
        internal static string VariableShouldBe0ButIs {
            get {
                return ResourceManager.GetString("VariableShouldBe0ButIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enterprise ähnelt.
        /// </summary>
        internal static string VersionEnterprise {
            get {
                return ResourceManager.GetString("VersionEnterprise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Evaluation ähnelt.
        /// </summary>
        internal static string VersionEvaluation {
            get {
                return ResourceManager.GetString("VersionEvaluation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Express ähnelt.
        /// </summary>
        internal static string VersionExpress {
            get {
                return ResourceManager.GetString("VersionExpress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard ähnelt.
        /// </summary>
        internal static string VersionStandard {
            get {
                return ResourceManager.GetString("VersionStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Violation: {0} ähnelt.
        /// </summary>
        internal static string Violation0 {
            get {
                return ResourceManager.GetString("Violation0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VSS: {0} ähnelt.
        /// </summary>
        internal static string Vss0 {
            get {
                return ResourceManager.GetString("Vss0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Wandered to dual infeasible: {1} ähnelt.
        /// </summary>
        internal static string WanderedToDualInfeasible1 {
            get {
                return ResourceManager.GetString("WanderedToDualInfeasible1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  pivot count: {0} Method Wandered to infeasible: {1} ähnelt.
        /// </summary>
        internal static string WanderedToInfeasible1 {
            get {
                return ResourceManager.GetString("WanderedToInfeasible1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown feature name ähnelt.
        /// </summary>
        internal static string WeAreMissingAnEmumForTheConstraintValueInTheFeatureExtraction {
            get {
                return ResourceManager.GetString("WeAreMissingAnEmumForTheConstraintValueInTheFeatureExtraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WriteMps needs a Model or simplex solver, optionally followed by a boolean indicating fixed (True) or free (False). ähnelt.
        /// </summary>
        internal static string WriteMpsNeedsAModelOrSimplexSolverOptionallyFollowedByABooleanIndicatingFixedTrueOrFreeFalse {
            get {
                return ResourceManager.GetString("WriteMpsNeedsAModelOrSimplexSolverOptionallyFollowedByABooleanIndicatingFixedTrue" +
                        "OrFreeFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die wrong argument: power expects exponent &gt;= 1 ähnelt.
        /// </summary>
        internal static string WrongArgumentPowerExpectsExponent1 {
            get {
                return ResourceManager.GetString("WrongArgumentPowerExpectsExponent1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong basic variable value! {0} {1} {2} ähnelt.
        /// </summary>
        internal static string WrongBasicVariableValue012 {
            get {
                return ResourceManager.GetString("WrongBasicVariableValue012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong decision declaration in Foreach statement ähnelt.
        /// </summary>
        internal static string WrongDecisionDeclarationInForeach {
            get {
                return ResourceManager.GetString("WrongDecisionDeclarationInForeach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can not deal with that error type ähnelt.
        /// </summary>
        internal static string WrongErrorType {
            get {
                return ResourceManager.GetString("WrongErrorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong line in INDEP section ähnelt.
        /// </summary>
        internal static string WrongLineInINDEPSection {
            get {
                return ResourceManager.GetString("WrongLineInINDEPSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong line in PERIODS section ähnelt.
        /// </summary>
        internal static string WrongLineInPERIODSSection {
            get {
                return ResourceManager.GetString("WrongLineInPERIODSSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MIP Solver currently has to use hybrid or exact numerics ähnelt.
        /// </summary>
        internal static string WrongMIPNumerics {
            get {
                return ResourceManager.GetString("WrongMIPNumerics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} random numbers are expected as input, but {1} were supplied ähnelt.
        /// </summary>
        internal static string WrongNumberOfRandomNumbers01 {
            get {
                return ResourceManager.GetString("WrongNumberOfRandomNumbers01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong parameter assign clause ähnelt.
        /// </summary>
        internal static string WrongParameterAssignClause {
            get {
                return ResourceManager.GetString("WrongParameterAssignClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong parameter assign in Foreach statement ähnelt.
        /// </summary>
        internal static string WrongParameterAssignInForeachStatement {
            get {
                return ResourceManager.GetString("WrongParameterAssignInForeachStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong syntax for domain. Try to use DomainSymbol[min, max] instead. ähnelt.
        /// </summary>
        internal static string WrongSyntaxForDomain {
            get {
                return ResourceManager.GetString("WrongSyntaxForDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong syntax for parameter. Try to use param[set1, set2, ...] instead. ähnelt.
        /// </summary>
        internal static string WrongSyntaxParameterTwoInvocation {
            get {
                return ResourceManager.GetString("WrongSyntaxParameterTwoInvocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wrong variable identifier {0} (keys should be non-null and unique) ähnelt.
        /// </summary>
        internal static string WrongVariableIdentifier0KeysShouldBeNonNullAndUnique {
            get {
                return ResourceManager.GetString("WrongVariableIdentifier0KeysShouldBeNonNullAndUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Given variable&apos;s kind is different from the version of the ConstraintSolverSolution.GetValue method called ähnelt.
        /// </summary>
        internal static string WrongVariableType {
            get {
                return ResourceManager.GetString("WrongVariableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} cannot be null. ähnelt.
        /// </summary>
        internal static string XIsNull0 {
            get {
                return ResourceManager.GetString("XIsNull0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is less than {1} ähnelt.
        /// </summary>
        internal static string XLessThanY01 {
            get {
                return ResourceManager.GetString("XLessThanY01", resourceCulture);
            }
        }
    }
}
